[2016-11-15 16:01:13,632] DEBUG [PartitionsReassignedListener on 0]: Partitions reassigned listener fired for path /admin/reassign_partitions. Record partitions to be reassigned {"version":1,"partitions":[{"topic":"topic4","partition":0,"replicas":[0,1]}]} (kafka.controller.PartitionsReassignedListener)
[2016-11-15 16:01:13,639] INFO [Controller 0]: Handling reassignment of partition [topic4,0] to new replicas 0,1 (kafka.controller.KafkaController)
[2016-11-15 16:01:13,644] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 16:01:13,646] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=topic4,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 16:01:13,647] INFO [Controller 0]: Leader 1 for partition [topic4,0] being reassigned, is already in the new list of replicas 0,1 and is alive (kafka.controller.KafkaController)
[2016-11-15 16:01:13,647] WARN [Controller-0-to-broker-1-send-thread], Controller 0 epoch 38 fails to send request {controller_id=0,controller_epoch=38,partition_states=[{topic=topic4,partition=0,controller_epoch=38,leader=1,leader_epoch=0,isr=[1,2,0],zk_version=0,replicas=[1,2,0]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9094,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(1, 172.16.26.72, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 16:01:13,648] DEBUG [Controller 0]: Updating leader epoch for partition [topic4,0]. (kafka.controller.KafkaController)
[2016-11-15 16:01:13,647] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 38 fails to send request {controller_id=0,controller_epoch=38,partition_states=[{topic=topic4,partition=0,controller_epoch=38,leader=1,leader_epoch=0,isr=[1,2,0],zk_version=0,replicas=[1,2,0]}],live_leaders=[{id=1,host=172.16.26.72,port=9093}]} to broker Node(0, 172.16.26.72, 9092). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 16:01:13,647] WARN [Controller-0-to-broker-2-send-thread], Controller 0 epoch 38 fails to send request {controller_id=0,controller_epoch=38,partition_states=[{topic=topic4,partition=0,controller_epoch=38,leader=1,leader_epoch=0,isr=[1,2,0],zk_version=0,replicas=[1,2,0]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9094,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(2, 172.16.26.72, 9094). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 16:01:13,653] INFO [Controller 0]: Updated leader epoch for partition [topic4,0] to 1 (kafka.controller.KafkaController)
[2016-11-15 16:01:13,655] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=topic4,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 16:01:13,659] DEBUG [Controller 0]: Removing replica 2 from ISR 1,2,0 for partition [topic4,0]. (kafka.controller.KafkaController)
[2016-11-15 16:01:13,663] INFO [Controller 0]: New leader and ISR for partition [topic4,0] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-15 16:01:13,666] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 16:01:13,667] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic4,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 16:01:13,668] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=topic4,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 16:01:13,668] DEBUG The stop replica request (delete = true) sent to broker 2 is [Topic=topic4,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 16:01:13,668] DEBUG The stop replica request (delete = false) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 16:01:13,669] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=topic4,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 16:01:13,669] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=topic4,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 16:01:13,672] DEBUG [Controller 0]: Updated path /brokers/topics/topic4 with {"version":1,"partitions":{"0":[0,1]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-15 16:01:13,672] INFO [Controller 0]: Updated assigned replicas for partition [topic4,0] being reassigned to 0,1  (kafka.controller.KafkaController)
[2016-11-15 16:01:13,678] INFO [Controller 0]: Removed partition [topic4,0] from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2016-11-15 16:01:13,680] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/topic4/partitions/0/state with children {"controller_epoch":38,"leader":1,"version":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-15 16:01:13,681] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/topic4/partitions/0/state with children {"controller_epoch":38,"leader":1,"version":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-15 16:01:13,682] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0,1]}} for path /brokers/topics/topic4 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-15 16:01:13,951] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to Node(0, 172.16.26.72, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 16:01:13,951] INFO [Controller-0-to-broker-1-send-thread], Controller 0 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 16:01:13,952] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to Node(2, 172.16.26.72, 9094) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 16:04:43,024] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] DEBUG [Controller 0]: topics not in preferred replica Map([topic4,0] -> List(0, 1)) (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.200000 (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] INFO [Controller 0]: Starting preferred replica leader election for partitions [topic4,0] (kafka.controller.KafkaController)
[2016-11-15 16:04:43,065] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [topic4,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 16:04:43,068] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [topic4,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 16:04:43,082] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [topic2,1] -> (Leader:2,ISR:0,1,2,LeaderEpoch:7,ControllerEpoch:38), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:3,ControllerEpoch:38), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:23,ControllerEpoch:38), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [othertopic,0] -> (Leader:0,ISR:0,1,2,LeaderEpoch:41,ControllerEpoch:38), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [othertopic,1] -> (Leader:2,ISR:0,1,2,LeaderEpoch:43,ControllerEpoch:38), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [topic2,0] -> (Leader:0,ISR:0,1,2,LeaderEpoch:6,ControllerEpoch:38), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:17,ControllerEpoch:38), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:23,ControllerEpoch:38), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:38), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [topic2,2] -> (Leader:0,ISR:0,1,2,LeaderEpoch:6,ControllerEpoch:38), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:23,ControllerEpoch:38), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [othertopic,2] -> (Leader:0,ISR:0,1,2,LeaderEpoch:48,ControllerEpoch:38), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:37,ControllerEpoch:38), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:4,ControllerEpoch:38), [topic4,0] -> (Leader:0,ISR:1,0,LeaderEpoch:3,ControllerEpoch:38), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:24,ControllerEpoch:38), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:25,ControllerEpoch:38)) (kafka.controller.PartitionStateMachine)
[2016-11-15 16:04:43,084] INFO [Controller 0]: Partition [topic4,0] completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2016-11-15 16:09:43,014] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:09:43,015] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:09:43,015] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:09:43,015] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:09:43,016] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:09:43,016] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:09:43,016] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:09:43,016] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:14:43,002] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:14:43,002] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:14:43,003] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:14:43,003] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:14:43,003] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:14:43,003] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:14:43,003] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:14:43,003] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:19:42,991] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:19:42,992] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:19:42,992] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:19:42,992] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:19:42,993] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:19:42,993] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:19:42,993] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:19:42,993] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:24:42,981] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:24:42,982] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:29:42,970] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:29:42,971] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:34:42,956] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:34:42,956] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:34:42,956] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:34:42,957] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:34:42,957] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:34:42,957] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:34:42,957] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:34:42,957] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:39:42,947] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:39:42,947] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:39:42,948] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:39:42,948] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:39:42,948] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:39:42,948] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:39:42,948] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:39:42,948] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:44:42,934] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:44:42,934] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:44:42,935] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:44:42,935] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:44:42,935] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:44:42,935] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:44:42,935] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:44:42,935] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:49:42,927] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:49:42,927] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:49:42,927] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:49:42,927] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:49:42,928] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:49:42,928] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:49:42,928] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:49:42,928] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:54:42,914] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:54:42,914] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:54:42,914] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:54:42,914] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:54:42,915] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:54:42,915] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:54:42,915] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:54:42,915] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:59:42,905] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 16:59:42,905] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic3,0] -> List(0), [topic4,0] -> List(0, 1))) (kafka.controller.KafkaController)
[2016-11-15 16:59:42,906] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:59:42,906] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 16:59:42,906] DEBUG [Controller 0]: topics not in preferred replica Map([othertopic,0] -> List(1, 2, 0), [topic2,0] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-15 16:59:42,906] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.071429 (kafka.controller.KafkaController)
[2016-11-15 16:59:42,906] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 16:59:42,906] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
