[2016-11-23 11:11:24,415] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-11-23 11:11:24,416] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-11-23 11:11:24,416] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-23 11:11:24,416] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-23 11:11:24,416] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:11:24,416] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2016-11-23 11:31:21,942] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-11-23 11:31:21,947] INFO [Controller 0]: Initialized controller epoch to 3 and zk version 2 (kafka.controller.KafkaController)
[2016-11-23 11:31:21,950] INFO [Controller 0]: Controller 0 incremented epoch to 4 (kafka.controller.KafkaController)
[2016-11-23 11:31:21,951] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-23 11:31:22,280] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-11-23 11:31:22,281] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-11-23 11:31:22,283] INFO [Controller-0-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-23 11:31:22,284] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-23 11:31:22,285] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-11-23 11:31:22,285] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-11-23 11:31:22,285] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-11-23 11:31:22,285] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-11-23 11:31:22,285] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-11-23 11:31:22,285] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-11-23 11:31:22,310] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-11-23 11:31:22,310] INFO [Controller 0]: List of topics ineligible for deletion: __consumer_offsets,test2 (kafka.controller.KafkaController)
[2016-11-23 11:31:22,310] INFO [Controller 0]: Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:31:22,310] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-11-23 11:31:22,310] INFO [Controller 0]: Current list of topics in the cluster: Set(test2, __consumer_offsets) (kafka.controller.KafkaController)
[2016-11-23 11:31:22,328] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=1],[Topic=__consumer_offsets,Partition=25,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=1],[Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=21,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=1],[Topic=__consumer_offsets,Partition=39,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=0],[Topic=__consumer_offsets,Partition=40,Replica=0],[Topic=__consumer_offsets,Partition=19,Replica=1],[Topic=__consumer_offsets,Partition=10,Replica=1],[Topic=__consumer_offsets,Partition=35,Replica=0],[Topic=__consumer_offsets,Partition=9,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=0],[Topic=test2,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=0],[Topic=__consumer_offsets,Partition=29,Replica=0],[Topic=__consumer_offsets,Partition=43,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=1],[Topic=__consumer_offsets,Partition=4,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=0],[Topic=__consumer_offsets,Partition=30,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=1],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=26,Replica=0],[Topic=__consumer_offsets,Partition=34,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=0],[Topic=__consumer_offsets,Partition=3,Replica=1],[Topic=__consumer_offsets,Partition=37,Replica=0],[Topic=__consumer_offsets,Partition=27,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=1],[Topic=__consumer_offsets,Partition=4,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=1],[Topic=__consumer_offsets,Partition=10,Replica=0],[Topic=__consumer_offsets,Partition=41,Replica=0],[Topic=__consumer_offsets,Partition=20,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=1],[Topic=test2,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=28,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=0],[Topic=__consumer_offsets,Partition=45,Replica=1],[Topic=__consumer_offsets,Partition=37,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=39,Replica=0],[Topic=__consumer_offsets,Partition=47,Replica=0],[Topic=__consumer_offsets,Partition=49,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=0],[Topic=__consumer_offsets,Partition=6,Replica=0],[Topic=__consumer_offsets,Partition=7,Replica=1],[Topic=__consumer_offsets,Partition=36,Replica=0],[Topic=__consumer_offsets,Partition=8,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=0],[Topic=__consumer_offsets,Partition=16,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=34,Replica=1],[Topic=__consumer_offsets,Partition=33,Replica=1],[Topic=__consumer_offsets,Partition=21,Replica=0],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=0],[Topic=__consumer_offsets,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=48,Replica=0],[Topic=__consumer_offsets,Partition=5,Replica=0],[Topic=test2,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=13,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=__consumer_offsets,Partition=3,Replica=0],[Topic=__consumer_offsets,Partition=25,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=__consumer_offsets,Partition=44,Replica=0],[Topic=__consumer_offsets,Partition=15,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=1],[Topic=__consumer_offsets,Partition=7,Replica=0],[Topic=__consumer_offsets,Partition=12,Replica=1],[Topic=__consumer_offsets,Partition=19,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=0],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=15,Replica=1],[Topic=__consumer_offsets,Partition=45,Replica=0],[Topic=__consumer_offsets,Partition=23,Replica=0],[Topic=__consumer_offsets,Partition=17,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=0],[Topic=__consumer_offsets,Partition=14,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:31:22,345] INFO [Controller-0-to-broker-1-send-thread], Controller 0 connected to Node(1, 172.16.26.72, 9010) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 11:31:22,351] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to Node(0, 172.16.26.72, 9009) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 11:31:22,367] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=test2,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=test2,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test2,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=test2,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:31:22,379] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OnlinePartition, [__consumer_offsets,30] -> OnlinePartition, [__consumer_offsets,47] -> OnlinePartition, [__consumer_offsets,29] -> OnlinePartition, [__consumer_offsets,41] -> OnlinePartition, [__consumer_offsets,39] -> OnlinePartition, [__consumer_offsets,10] -> OnlinePartition, [__consumer_offsets,17] -> OnlinePartition, [__consumer_offsets,14] -> OnlinePartition, [__consumer_offsets,40] -> OnlinePartition, [__consumer_offsets,18] -> OnlinePartition, [__consumer_offsets,26] -> OnlinePartition, [__consumer_offsets,0] -> OnlinePartition, [__consumer_offsets,24] -> OnlinePartition, [__consumer_offsets,33] -> OnlinePartition, [__consumer_offsets,20] -> OnlinePartition, [__consumer_offsets,21] -> OnlinePartition, [__consumer_offsets,3] -> OnlinePartition, [__consumer_offsets,22] -> OnlinePartition, [__consumer_offsets,5] -> OnlinePartition, [__consumer_offsets,12] -> OnlinePartition, [__consumer_offsets,8] -> OnlinePartition, [__consumer_offsets,23] -> OnlinePartition, [__consumer_offsets,15] -> OnlinePartition, [__consumer_offsets,11] -> OnlinePartition, [__consumer_offsets,48] -> OnlinePartition, [__consumer_offsets,13] -> OnlinePartition, [__consumer_offsets,49] -> OnlinePartition, [__consumer_offsets,6] -> OnlinePartition, [__consumer_offsets,28] -> OnlinePartition, [__consumer_offsets,4] -> OnlinePartition, [__consumer_offsets,37] -> OnlinePartition, [__consumer_offsets,31] -> OnlinePartition, [__consumer_offsets,44] -> OnlinePartition, [__consumer_offsets,42] -> OnlinePartition, [__consumer_offsets,34] -> OnlinePartition, [test2,1] -> OnlinePartition, [__consumer_offsets,46] -> OnlinePartition, [test2,0] -> OnlinePartition, [__consumer_offsets,25] -> OnlinePartition, [__consumer_offsets,45] -> OnlinePartition, [__consumer_offsets,27] -> OnlinePartition, [__consumer_offsets,32] -> OnlinePartition, [__consumer_offsets,43] -> OnlinePartition, [__consumer_offsets,36] -> OnlinePartition, [__consumer_offsets,35] -> OnlinePartition, [__consumer_offsets,7] -> OnlinePartition, [__consumer_offsets,9] -> OnlinePartition, [__consumer_offsets,38] -> OnlinePartition, [__consumer_offsets,1] -> OnlinePartition, [__consumer_offsets,2] -> OnlinePartition, [__consumer_offsets,16] -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:31:22,380] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2016-11-23 11:31:22,380] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-11-23 11:31:22,380] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-11-23 11:31:22,396] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-11-23 11:31:22,402] INFO [delete-topics-thread-0], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2016-11-23 11:31:22,402] DEBUG [Topic Deletion Manager 0], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2016-11-23 11:31:27,398] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 11:31:27,399] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,1] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [test2,0] -> List(0, 1), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 11:31:27,399] DEBUG [Controller 0]: topics not in preferred replica Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2016-11-23 11:31:27,400] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 11:31:27,400] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:31:27,400] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:31:27,400] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:31:27,400] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:31:54,040] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-23 11:31:54,053] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-23 11:31:54,054] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-11-23 11:31:54,055] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-11-23 11:31:54,055] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-23 11:31:54,059] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to Node(2, 172.16.26.72, 9011) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 11:31:54,068] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=test2,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:31:55,891] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:31:56,058] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,16], [__consumer_offsets,49], [__consumer_offsets,28], [__consumer_offsets,7], [__consumer_offsets,4], [__consumer_offsets,3], [__consumer_offsets,13], [__consumer_offsets,39], [__consumer_offsets,40], [__consumer_offsets,45], [__consumer_offsets,15], [__consumer_offsets,33], [__consumer_offsets,37], [__consumer_offsets,21], [__consumer_offsets,27], [__consumer_offsets,34], [__consumer_offsets,9], [__consumer_offsets,22], [__consumer_offsets,25], [__consumer_offsets,10], [__consumer_offsets,31], [__consumer_offsets,19], [__consumer_offsets,46], [__consumer_offsets,43], [__consumer_offsets,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:31:56,081] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:31:56,341] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:31:56,416] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,32], [__consumer_offsets,44], [__consumer_offsets,17], [__consumer_offsets,23], [__consumer_offsets,29], [__consumer_offsets,35], [__consumer_offsets,24], [__consumer_offsets,41], [__consumer_offsets,0], [__consumer_offsets,38], [__consumer_offsets,8], [__consumer_offsets,5], [__consumer_offsets,36], [__consumer_offsets,6], [__consumer_offsets,11], [__consumer_offsets,20], [__consumer_offsets,47], [__consumer_offsets,2], [__consumer_offsets,42], [__consumer_offsets,14], [__consumer_offsets,48], [__consumer_offsets,18], [__consumer_offsets,12], [test2,1], [__consumer_offsets,26], [__consumer_offsets,30]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:31:56,447] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:33:35,849] INFO [Controller 0]: Shutting down broker 2 (kafka.controller.KafkaController)
[2016-11-23 11:33:35,851] DEBUG [Controller 0]: All shutting down brokers: 2 (kafka.controller.KafkaController)
[2016-11-23 11:33:35,852] DEBUG [Controller 0]: Live brokers: 0,1 (kafka.controller.KafkaController)
[2016-11-23 11:33:35,864] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,865] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=43,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,867] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=43,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,868] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-23 11:33:35,888] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,43] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:35,891] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,891] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=43,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,891] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,891] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,891] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,891] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-23 11:33:35,921] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,14] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:35,930] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,930] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,931] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,931] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,934] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,935] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-23 11:33:35,939] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,28] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:35,942] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,942] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,944] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,944] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,944] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,949] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-23 11:33:35,954] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,4] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:35,960] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,960] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,960] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,960] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,960] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,961] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-23 11:33:35,969] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,36] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:35,972] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,973] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,973] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,974] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,974] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,974] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-23 11:33:35,979] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,6] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:35,983] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,983] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,983] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,984] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:35,984] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:35,984] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,000] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,39] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,007] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,007] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,007] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,007] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,009] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,009] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,013] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,23] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,018] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,019] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,020] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,020] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,020] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,020] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,028] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,24] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,035] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,035] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,036] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,036] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,037] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,037] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,042] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,38] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,051] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,051] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,052] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,052] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,052] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,052] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,057] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,16] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,069] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,069] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,070] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,070] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,070] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,070] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,097] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,3] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,104] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,104] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,105] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,106] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,107] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,107] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,114] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,21] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,119] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,119] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,119] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,119] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,119] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,119] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,134] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,10] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,146] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,146] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,147] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,147] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,147] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,148] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,157] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,40] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,162] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,162] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,162] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,162] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,163] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,163] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,171] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,34] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,173] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,173] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,173] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,173] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=25,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,176] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,176] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,180] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,25] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,182] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,182] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=25,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,182] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,182] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,182] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,182] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,194] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,27] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,198] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,198] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,201] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,201] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,203] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,205] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,214] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,42] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,216] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,216] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,217] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,217] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,217] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,217] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,226] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,11] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,229] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,229] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,229] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,229] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=7,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,229] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=7,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,232] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,237] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,7] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,238] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,238] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=7,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,240] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,240] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,240] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,241] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,244] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,47] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,246] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,246] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,246] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,246] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,246] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,248] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,253] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,9] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,254] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,254] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,255] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,255] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=13,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,255] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=13,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,256] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,264] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,13] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,265] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,265] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=13,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,265] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,265] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,265] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,265] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,277] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,29] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,278] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,278] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,278] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,278] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,278] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,278] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,287] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,8] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,288] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,288] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,288] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,288] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,288] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,288] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,299] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,22] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,302] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,303] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,303] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,303] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=test2,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,303] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,303] DEBUG [Controller 0]: Removing replica 2 from ISR 1,2 for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,309] INFO [Controller 0]: New leader and ISR for partition [test2,1] is {"leader":1,"leader_epoch":9,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,312] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,312] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=test2,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,314] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,314] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=31,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,314] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=31,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,315] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,322] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,31] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,323] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,323] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=31,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,323] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,323] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,323] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,323] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,333] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,18] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,341] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,341] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,341] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,341] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,341] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,341] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,356] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,20] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,358] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,358] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,358] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,358] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=37,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,358] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=37,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,358] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,370] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,37] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,374] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,374] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=37,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,374] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,374] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=49,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,374] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=49,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,374] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,384] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,49] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,389] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,390] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=49,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,390] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,390] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,390] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,390] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,398] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,12] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,406] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,406] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,406] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,406] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,408] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,408] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,416] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,5] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,419] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,419] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,419] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,419] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,419] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,419] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,427] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,32] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,435] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,435] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,436] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,436] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,437] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,437] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,446] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,2] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,452] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,452] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,453] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,453] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,453] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,453] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,458] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,1] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,473] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,473] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,473] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,473] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,473] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,474] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,485] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,0] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,490] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,490] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,491] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,491] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,491] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,491] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,495] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,15] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,501] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,501] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,501] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,501] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,502] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,502] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,506] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,44] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,509] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,509] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,510] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,510] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,511] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,511] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,515] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,17] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,519] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,519] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,519] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,519] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,520] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,520] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,526] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,48] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,533] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,533] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,533] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,534] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,534] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,535] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,544] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,26] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,552] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,552] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,552] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,552] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,552] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,553] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,557] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,33] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,558] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,558] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,559] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,559] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,559] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,562] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,572] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,41] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,573] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,573] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,573] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,573] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,573] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,573] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,588] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,45] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,589] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,589] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,589] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,589] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,589] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,589] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,600] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,35] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,603] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,604] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,605] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,605] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,605] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,605] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,620] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,46] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,625] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,625] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,625] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,625] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=19,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,625] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=19,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,625] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1,2 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,637] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,19] is {"leader":0,"leader_epoch":2,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,642] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,642] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=19,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,642] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,643] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,643] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:36,643] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-23 11:33:36,646] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,30] is {"leader":1,"leader_epoch":2,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:36,648] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,648] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:36,651] TRACE [Controller 0]: All leaders = [__consumer_offsets,19] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,30] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,47] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,29] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,41] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,39] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,10] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,17] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,14] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,40] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,18] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,26] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,0] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,24] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,33] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,20] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,3] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,21] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,5] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,22] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,12] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,8] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,23] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,15] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,11] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,48] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,13] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,49] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,6] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,28] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,4] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,37] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,31] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,44] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,42] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,34] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[test2,1] -> (Leader:1,ISR:1,LeaderEpoch:9,ControllerEpoch:4),[__consumer_offsets,46] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2),[__consumer_offsets,25] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,45] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,27] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,32] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,43] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,36] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,35] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,7] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,9] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,38] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,1] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,16] -> (Leader:0,ISR:0,1,LeaderEpoch:2,ControllerEpoch:4),[__consumer_offsets,2] -> (Leader:1,ISR:1,0,LeaderEpoch:2,ControllerEpoch:4) (kafka.controller.KafkaController)
[2016-11-23 11:33:36,675] WARN [Controller-0-to-broker-2-send-thread], Controller 0 epoch 4 fails to send request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=19}]} to broker Node(2, 172.16.26.72, 9011). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:36,983] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:37,288] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:37,592] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:37,895] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:38,200] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:38,504] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:38,809] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:38,833] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:33:38,838] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,30]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:33:38,843] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:33:39,114] WARN [Controller-0-to-broker-2-send-thread], Controller 0's connection to broker Node(2, 172.16.26.72, 9011) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9011) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:33:39,296] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-23 11:33:39,300] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: 2, all live brokers: 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-23 11:33:39,301] INFO [Controller-0-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-23 11:33:39,301] INFO [Controller-0-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-23 11:33:39,301] INFO [Controller-0-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-23 11:33:39,302] INFO [Controller 0]: Broker failure callback for 2 (kafka.controller.KafkaController)
[2016-11-23 11:33:39,302] INFO [Controller 0]: Removed ArrayBuffer(2) from list of shutting down brokers. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,303] INFO [Partition state machine on Controller 0]: Invoking state change to OfflinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-11-23 11:33:39,304] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=test2,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:33:39,304] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,306] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,17] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,307] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,309] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,38] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,309] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,310] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,39] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,311] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,313] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,23] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,313] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,317] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,48] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,317] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,319] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,42] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,319] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,321] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,2] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,321] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,324] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,22] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,325] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,328] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,13] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,329] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,333] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,34] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,333] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,335] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,40] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,335] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,337] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,33] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,337] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,340] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,3] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,340] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,343] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,37] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,343] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,345] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,24] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,345] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,347] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,11] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,347] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,349] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,20] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,349] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,351] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,27] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,351] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0,2 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,354] INFO [Controller 0]: New leader and ISR for partition [__consumer_offsets,30] is {"leader":1,"leader_epoch":3,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:33:39,354] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,355] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,15] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,356] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,359] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,28] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,359] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,361] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,7] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,361] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,363] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,43] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,363] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,365] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,10] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,366] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,368] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,12] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,368] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,372] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,32] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,372] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,375] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,4] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,375] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,378] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,26] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,378] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,381] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,35] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,381] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,383] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,46] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,383] DEBUG [Controller 0]: Removing replica 2 from ISR 1 for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,385] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [test2,1] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,385] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,387] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,6] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,387] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,390] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,8] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,390] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,393] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,44] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,393] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,395] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,45] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,396] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,398] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,49] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,398] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,400] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,1] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,400] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,402] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,19] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,402] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,404] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,36] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,405] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,407] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,14] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,407] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,409] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,31] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,409] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,411] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,21] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,412] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,414] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,25] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,414] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,416] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,5] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,416] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,418] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,41] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,418] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,421] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,47] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,421] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,424] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,16] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,425] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,427] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,0] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,427] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,429] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,29] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,429] DEBUG [Controller 0]: Removing replica 2 from ISR 1,0 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,431] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,18] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,432] DEBUG [Controller 0]: Removing replica 2 from ISR 0,1 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-23 11:33:39,434] WARN [Controller 0]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,9] since it is not in the ISR. Leader = 0 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-23 11:33:39,450] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:39,452] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=test2,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=17}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=38}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=39}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=23}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=48}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=42}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,453] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=2}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=22}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=13}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=34}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=40}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=33}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=3}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=37}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=24}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=11}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=20}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=27}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=30}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=15}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=28}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=7}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=43}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=10}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,454] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=12}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=32}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=4}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=26}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=35}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=46}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=test2,partition=1}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=6}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=8}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=44}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=45}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=49}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=1}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=19}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,455] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=36}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=14}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=31}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=21}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=25}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=5}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=41}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,456] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=47}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,457] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=16}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,457] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=0}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,457] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=29}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,457] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=18}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:33:39,457] WARN [Channel manager on controller 0]: Not sending request {controller_id=0,controller_epoch=4,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=9}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 11:36:27,386] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 11:36:27,387] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,1] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [test2,0] -> List(0, 1), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 11:36:27,388] DEBUG [Controller 0]: topics not in preferred replica Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2016-11-23 11:36:27,388] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 11:36:27,388] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:36:27,388] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:36:27,388] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:36:27,388] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:41:27,374] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 11:41:27,375] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,1] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [test2,0] -> List(0, 1), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 11:41:27,375] DEBUG [Controller 0]: topics not in preferred replica Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2016-11-23 11:41:27,375] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 11:41:27,376] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:41:27,376] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:41:27,376] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:41:27,376] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:46:27,361] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 11:46:27,362] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,1] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [test2,0] -> List(0, 1), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 11:46:27,362] DEBUG [Controller 0]: topics not in preferred replica Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2016-11-23 11:46:27,363] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 11:46:27,363] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:46:27,363] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:46:27,363] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:46:27,363] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:51:09,203] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-23 11:51:09,214] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-23 11:51:09,214] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-11-23 11:51:09,216] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:09,217] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-23 11:51:09,220] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to Node(2, 172.16.26.72, 9011) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 11:51:09,225] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=test2,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:51:09,227] WARN [Controller-0-to-broker-1-send-thread], Controller 0 epoch 4 fails to send request {controller_id=0,controller_epoch=4,partition_states=[{topic=__consumer_offsets,partition=49,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=38,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=16,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=27,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=8,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=19,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=2,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=13,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=24,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=46,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=35,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=5,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=43,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=32,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=21,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=10,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=37,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=test2,partition=1,controller_epoch=4,leader=1,leader_epoch=9,isr=[1],zk_version=19,replicas=[1,2]},{topic=__consumer_offsets,partition=48,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=18,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=40,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=29,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=7,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=34,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=23,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=45,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=26,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=15,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=4,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=42,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=20,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=31,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=9,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=1,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=12,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=17,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=28,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=6,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=39,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=44,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=test2,partition=0,controller_epoch=2,leader=0,leader_epoch=4,isr=[0,1],zk_version=12,replicas=[0,1]},{topic=__consumer_offsets,partition=47,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=36,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=3,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=14,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=25,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=30,controller_epoch=4,leader=1,leader_epoch=3,isr=[1,0],zk_version=5,replicas=[2,1,0]},{topic=__consumer_offsets,partition=41,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=33,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=22,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=11,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=0,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]}],live_brokers=[{id=0,end_points=[{port=9009,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9010,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9011,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(1, 172.16.26.72, 9010). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:51:09,228] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 4 fails to send request {controller_id=0,controller_epoch=4,partition_states=[{topic=__consumer_offsets,partition=49,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=38,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=16,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=27,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=8,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=19,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=2,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=13,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=24,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=46,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=35,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=5,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=43,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=32,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=21,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=10,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=37,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=test2,partition=1,controller_epoch=4,leader=1,leader_epoch=9,isr=[1],zk_version=19,replicas=[1,2]},{topic=__consumer_offsets,partition=48,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=18,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=40,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=29,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=7,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=34,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=23,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=45,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=26,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=15,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=4,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=42,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=20,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=31,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=9,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=1,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=12,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=17,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=28,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=6,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=39,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=44,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=test2,partition=0,controller_epoch=2,leader=0,leader_epoch=4,isr=[0,1],zk_version=12,replicas=[0,1]},{topic=__consumer_offsets,partition=47,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=36,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]},{topic=__consumer_offsets,partition=3,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=14,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,0,2]},{topic=__consumer_offsets,partition=25,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,2,1]},{topic=__consumer_offsets,partition=30,controller_epoch=4,leader=1,leader_epoch=3,isr=[1,0],zk_version=5,replicas=[2,1,0]},{topic=__consumer_offsets,partition=41,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=33,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[2,0,1]},{topic=__consumer_offsets,partition=22,controller_epoch=4,leader=0,leader_epoch=2,isr=[0,1],zk_version=3,replicas=[0,1,2]},{topic=__consumer_offsets,partition=11,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[1,2,0]},{topic=__consumer_offsets,partition=0,controller_epoch=4,leader=1,leader_epoch=2,isr=[1,0],zk_version=3,replicas=[2,1,0]}],live_brokers=[{id=0,end_points=[{port=9009,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9010,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9011,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(0, 172.16.26.72, 9009). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-23 11:51:09,528] INFO [Controller-0-to-broker-1-send-thread], Controller 0 connected to Node(1, 172.16.26.72, 9010) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 11:51:09,529] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to Node(0, 172.16.26.72, 9009) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 11:51:10,795] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:51:10,855] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,16], [__consumer_offsets,49], [__consumer_offsets,28], [__consumer_offsets,7], [__consumer_offsets,4], [__consumer_offsets,3], [__consumer_offsets,13], [__consumer_offsets,39], [__consumer_offsets,40], [__consumer_offsets,45], [__consumer_offsets,15], [__consumer_offsets,33], [__consumer_offsets,37], [__consumer_offsets,21], [__consumer_offsets,27], [__consumer_offsets,34], [__consumer_offsets,9], [__consumer_offsets,22], [__consumer_offsets,25], [__consumer_offsets,10], [__consumer_offsets,31], [__consumer_offsets,19], [__consumer_offsets,46], [__consumer_offsets,43], [__consumer_offsets,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:51:10,861] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:51:11,289] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:51:11,342] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,32], [__consumer_offsets,44], [__consumer_offsets,17], [__consumer_offsets,23], [__consumer_offsets,29], [__consumer_offsets,35], [__consumer_offsets,24], [__consumer_offsets,41], [__consumer_offsets,0], [__consumer_offsets,38], [__consumer_offsets,8], [__consumer_offsets,5], [__consumer_offsets,36], [__consumer_offsets,6], [__consumer_offsets,11], [__consumer_offsets,20], [__consumer_offsets,47], [__consumer_offsets,2], [__consumer_offsets,42], [__consumer_offsets,14], [__consumer_offsets,48], [__consumer_offsets,18], [__consumer_offsets,12], [test2,1], [__consumer_offsets,26], [__consumer_offsets,30]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:51:11,350] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:51:27,350] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 11:51:27,351] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,1] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [test2,0] -> List(0, 1), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 11:51:27,351] DEBUG [Controller 0]: topics not in preferred replica Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2016-11-23 11:51:27,351] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,351] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,30] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,351] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,354] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,30] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,356] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,356] INFO [Controller 0]: Partition [__consumer_offsets,30] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,357] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,39] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,357] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,365] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,39] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,376] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,381] INFO [Controller 0]: Partition [__consumer_offsets,39] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,381] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,18] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,381] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,384] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,18] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,386] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,392] INFO [Controller 0]: Partition [__consumer_offsets,18] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,393] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,0] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,393] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,397] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,400] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,410] INFO [Controller 0]: Partition [__consumer_offsets,0] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,410] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,24] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,410] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,416] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,24] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,421] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,426] INFO [Controller 0]: Partition [__consumer_offsets,24] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,426] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,33] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,426] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,433] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,33] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,438] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,457] INFO [Controller 0]: Partition [__consumer_offsets,33] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,457] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,3] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,458] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,460] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,3] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,469] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,491] INFO [Controller 0]: Partition [__consumer_offsets,3] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,491] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,21] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,491] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,493] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,21] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,495] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,496] INFO [Controller 0]: Partition [__consumer_offsets,21] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,496] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,12] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,496] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,502] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,12] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,505] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,506] INFO [Controller 0]: Partition [__consumer_offsets,12] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,506] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,15] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,506] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,516] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,15] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,520] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,521] INFO [Controller 0]: Partition [__consumer_offsets,15] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,521] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,48] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,521] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,527] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,48] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,546] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,547] INFO [Controller 0]: Partition [__consumer_offsets,48] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,547] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,6] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,547] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,559] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,6] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,564] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,565] INFO [Controller 0]: Partition [__consumer_offsets,6] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,565] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,42] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,565] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,573] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,42] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,580] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,581] INFO [Controller 0]: Partition [__consumer_offsets,42] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,581] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,45] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,581] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,602] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,45] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,606] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,607] INFO [Controller 0]: Partition [__consumer_offsets,45] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,607] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,27] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,607] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,622] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,27] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,626] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,632] INFO [Controller 0]: Partition [__consumer_offsets,27] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,632] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,36] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,632] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,637] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,36] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,640] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,647] INFO [Controller 0]: Partition [__consumer_offsets,36] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,647] INFO [Controller 0]: Starting preferred replica leader election for partitions [__consumer_offsets,9] (kafka.controller.KafkaController)
[2016-11-23 11:51:27,647] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,664] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [__consumer_offsets,9] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-23 11:51:27,666] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:0,ISR:0,1,LeaderEpoch:4,ControllerEpoch:2), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:51:27,671] INFO [Controller 0]: Partition [__consumer_offsets,9] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,671] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:51:27,672] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:51:27,672] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:51:27,673] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:52:21,428] DEBUG [PartitionsReassignedListener on 0]: Partitions reassigned listener fired for path /admin/reassign_partitions. Record partitions to be reassigned {"version":1,"partitions":[{"topic":"test2","partition":1,"replicas":[0,1]},{"topic":"test2","partition":0,"replicas":[1,0]}]} (kafka.controller.PartitionsReassignedListener)
[2016-11-23 11:52:21,437] INFO [Controller 0]: Handling reassignment of partition [test2,1] to new replicas 0,1 (kafka.controller.KafkaController)
[2016-11-23 11:52:21,444] INFO [Controller 0]: New replicas 0,1 for partition [test2,1] being reassigned not yet caught up with the leader (kafka.controller.KafkaController)
[2016-11-23 11:52:21,449] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[0,1,2],"0":[0,1]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:52:21,450] INFO [Controller 0]: Updated assigned replicas for partition [test2,1] being reassigned to 0,1,2  (kafka.controller.KafkaController)
[2016-11-23 11:52:21,451] DEBUG [Controller 0]: Updating leader epoch for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:52:21,476] INFO [Controller 0]: Updated leader epoch for partition [test2,1] to 10 (kafka.controller.KafkaController)
[2016-11-23 11:52:21,479] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=test2,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,516] INFO [Controller 0]: Waiting for new replicas 0,1 for partition [test2,1] being reassigned to catch up with the leader (kafka.controller.KafkaController)
[2016-11-23 11:52:21,516] INFO [Controller 0]: Handling reassignment of partition [test2,0] to new replicas 1,0 (kafka.controller.KafkaController)
[2016-11-23 11:52:21,523] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,524] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,594] INFO [Controller 0]: Leader 0 for partition [test2,0] being reassigned, is already in the new list of replicas 1,0 and is alive (kafka.controller.KafkaController)
[2016-11-23 11:52:21,598] DEBUG [Controller 0]: Updating leader epoch for partition [test2,0]. (kafka.controller.KafkaController)
[2016-11-23 11:52:21,604] INFO [Controller 0]: Updated leader epoch for partition [test2,0] to 5 (kafka.controller.KafkaController)
[2016-11-23 11:52:21,613] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[0,1,2],"0":[1,0]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:52:21,613] INFO [Controller 0]: Updated assigned replicas for partition [test2,0] being reassigned to 1,0  (kafka.controller.KafkaController)
[2016-11-23 11:52:21,620] INFO [Controller 0]: Removed partition [test2,0] from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2016-11-23 11:52:21,623] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[0,1,2],"0":[1,0]}} for path /brokers/topics/test2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-23 11:52:21,626] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":10,"isr":[1,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,630] INFO [ReassignedPartitionsIsrChangeListener on controller 0]: 1/2 replicas have caught up with the leader for partition [test2,1] being reassigned.Replica(s) 0 still need to catch up (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,631] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/0/state with children {"controller_epoch":4,"leader":0,"version":1,"leader_epoch":5,"isr":[0,1]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,631] DEBUG [PartitionsReassignedListener on 0]: Partitions reassigned listener fired for path /admin/reassign_partitions. Record partitions to be reassigned {"version":1,"partitions":[{"topic":"test2","partition":1,"replicas":[0,1]}]} (kafka.controller.PartitionsReassignedListener)
[2016-11-23 11:52:21,715] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":10,"isr":[1,2,0]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,718] INFO [ReassignedPartitionsIsrChangeListener on controller 0]: 2/2 replicas have caught up with the leader for partition [test2,1] being reassigned.Resuming partition reassignment (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,720] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,721] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,722] INFO [Controller 0]: Leader 1 for partition [test2,1] being reassigned, is already in the new list of replicas 0,1 and is alive (kafka.controller.KafkaController)
[2016-11-23 11:52:21,722] DEBUG [Controller 0]: Updating leader epoch for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:52:21,726] INFO [Controller 0]: Updated leader epoch for partition [test2,1] to 11 (kafka.controller.KafkaController)
[2016-11-23 11:52:21,736] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,736] DEBUG [Controller 0]: Removing replica 2 from ISR 1,2 for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:52:21,739] INFO [Controller 0]: New leader and ISR for partition [test2,1] is {"leader":1,"leader_epoch":12,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-23 11:52:21,742] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:52:21,742] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=test2,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:52:21,742] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,743] DEBUG The stop replica request (delete = true) sent to broker 2 is [Topic=test2,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:52:21,743] DEBUG The stop replica request (delete = false) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:52:21,743] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,745] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:52:21,750] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[0,1],"0":[1,0]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:52:21,750] INFO [Controller 0]: Updated assigned replicas for partition [test2,1] being reassigned to 0,1  (kafka.controller.KafkaController)
[2016-11-23 11:52:21,763] INFO [Controller 0]: Removed partition [test2,1] from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2016-11-23 11:52:21,765] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":12,"isr":[1,0]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,768] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":12,"isr":[1,0]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:52:21,769] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[0,1],"0":[1,0]}} for path /brokers/topics/test2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-23 11:52:23,788] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:52:23,790] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([test2,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:52:23,794] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:53:34,816] DEBUG [PartitionsReassignedListener on 0]: Partitions reassigned listener fired for path /admin/reassign_partitions. Record partitions to be reassigned {"version":1,"partitions":[{"topic":"test2","partition":1,"replicas":[2,1]},{"topic":"test2","partition":0,"replicas":[1,2]}]} (kafka.controller.PartitionsReassignedListener)
[2016-11-23 11:53:34,818] INFO [Controller 0]: Handling reassignment of partition [test2,1] to new replicas 2,1 (kafka.controller.KafkaController)
[2016-11-23 11:53:34,823] INFO [Controller 0]: New replicas 2,1 for partition [test2,1] being reassigned not yet caught up with the leader (kafka.controller.KafkaController)
[2016-11-23 11:53:34,826] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[2,1,0],"0":[1,0]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:53:34,826] INFO [Controller 0]: Updated assigned replicas for partition [test2,1] being reassigned to 2,1,0  (kafka.controller.KafkaController)
[2016-11-23 11:53:34,826] DEBUG [Controller 0]: Updating leader epoch for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:53:34,862] INFO [Controller 0]: Updated leader epoch for partition [test2,1] to 13 (kafka.controller.KafkaController)
[2016-11-23 11:53:34,887] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:34,893] INFO [Controller 0]: Waiting for new replicas 2,1 for partition [test2,1] being reassigned to catch up with the leader (kafka.controller.KafkaController)
[2016-11-23 11:53:34,893] INFO [Controller 0]: Handling reassignment of partition [test2,0] to new replicas 1,2 (kafka.controller.KafkaController)
[2016-11-23 11:53:34,897] INFO [Controller 0]: New replicas 1,2 for partition [test2,0] being reassigned not yet caught up with the leader (kafka.controller.KafkaController)
[2016-11-23 11:53:34,901] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[2,1,0],"0":[1,2,0]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:53:34,902] INFO [Controller 0]: Updated assigned replicas for partition [test2,0] being reassigned to 1,2,0  (kafka.controller.KafkaController)
[2016-11-23 11:53:34,903] DEBUG [Controller 0]: Updating leader epoch for partition [test2,0]. (kafka.controller.KafkaController)
[2016-11-23 11:53:34,909] INFO [Controller 0]: Updated leader epoch for partition [test2,0] to 6 (kafka.controller.KafkaController)
[2016-11-23 11:53:34,913] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=test2,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:34,938] INFO [Controller 0]: Waiting for new replicas 1,2 for partition [test2,0] being reassigned to catch up with the leader (kafka.controller.KafkaController)
[2016-11-23 11:53:34,939] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[2,1,0],"0":[1,2,0]}} for path /brokers/topics/test2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-23 11:53:34,942] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":13,"isr":[1,0]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:34,944] INFO [ReassignedPartitionsIsrChangeListener on controller 0]: 1/2 replicas have caught up with the leader for partition [test2,1] being reassigned.Replica(s) 2 still need to catch up (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:34,945] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/0/state with children {"controller_epoch":4,"leader":0,"version":1,"leader_epoch":6,"isr":[0,1]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:34,947] INFO [ReassignedPartitionsIsrChangeListener on controller 0]: 1/2 replicas have caught up with the leader for partition [test2,0] being reassigned.Replica(s) 2 still need to catch up (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,008] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/0/state with children {"controller_epoch":4,"leader":0,"version":1,"leader_epoch":6,"isr":[0,1,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,010] INFO [ReassignedPartitionsIsrChangeListener on controller 0]: 2/2 replicas have caught up with the leader for partition [test2,0] being reassigned.Resuming partition reassignment (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,013] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,017] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,019] INFO [Controller 0]: Leader 0 for partition [test2,0] being reassigned, is not in the new list of replicas 1,2. Re-electing leader (kafka.controller.KafkaController)
[2016-11-23 11:53:35,019] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [test2,0] (kafka.controller.PartitionStateMachine)
[2016-11-23 11:53:35,032] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,30] -> (Leader:2,ISR:1,0,2,LeaderEpoch:4,ControllerEpoch:4), [__consumer_offsets,47] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,29] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,41] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,39] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,10] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,17] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,14] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,40] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,18] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,26] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,0] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,24] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,33] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,20] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,21] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,3] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,22] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,5] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,12] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,8] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,23] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,15] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,11] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,48] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,13] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,49] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,6] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,28] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,4] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,37] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,31] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,44] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,42] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,34] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,1] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [test2,0] -> (Leader:1,ISR:0,1,2,LeaderEpoch:7,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,45] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,27] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,32] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,43] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,36] -> (Leader:2,ISR:1,0,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,35] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,7] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,9] -> (Leader:2,ISR:0,1,2,LeaderEpoch:3,ControllerEpoch:4), [__consumer_offsets,38] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,1] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,2] -> (Leader:1,ISR:1,0,2,LeaderEpoch:2,ControllerEpoch:4), [__consumer_offsets,16] -> (Leader:0,ISR:0,1,2,LeaderEpoch:2,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-11-23 11:53:35,036] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=test2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,036] DEBUG [Controller 0]: Removing replica 0 from ISR 0,1,2 for partition [test2,0]. (kafka.controller.KafkaController)
[2016-11-23 11:53:35,061] INFO [Controller 0]: New leader and ISR for partition [test2,0] is {"leader":1,"leader_epoch":8,"isr":[1,2]} (kafka.controller.KafkaController)
[2016-11-23 11:53:35,062] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,062] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=test2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,062] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=test2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,062] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=test2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,062] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,062] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=test2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,062] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=test2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,073] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[2,1,0],"0":[1,2]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:53:35,073] INFO [Controller 0]: Updated assigned replicas for partition [test2,0] being reassigned to 1,2  (kafka.controller.KafkaController)
[2016-11-23 11:53:35,083] INFO [Controller 0]: Removed partition [test2,0] from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2016-11-23 11:53:35,088] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/0/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":8,"isr":[1,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,089] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/0/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":8,"isr":[1,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,090] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[2,1,0],"0":[1,2]}} for path /brokers/topics/test2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-23 11:53:35,094] DEBUG [PartitionsReassignedListener on 0]: Partitions reassigned listener fired for path /admin/reassign_partitions. Record partitions to be reassigned {"version":1,"partitions":[{"topic":"test2","partition":1,"replicas":[2,1]}]} (kafka.controller.PartitionsReassignedListener)
[2016-11-23 11:53:35,363] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":13,"isr":[1,0,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,364] INFO [ReassignedPartitionsIsrChangeListener on controller 0]: 2/2 replicas have caught up with the leader for partition [test2,1] being reassigned.Resuming partition reassignment (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,366] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,366] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test2,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,367] INFO [Controller 0]: Leader 1 for partition [test2,1] being reassigned, is already in the new list of replicas 2,1 and is alive (kafka.controller.KafkaController)
[2016-11-23 11:53:35,368] DEBUG [Controller 0]: Updating leader epoch for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:53:35,370] INFO [Controller 0]: Updated leader epoch for partition [test2,1] to 14 (kafka.controller.KafkaController)
[2016-11-23 11:53:35,372] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=test2,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,372] DEBUG [Controller 0]: Removing replica 0 from ISR 1,0 for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 11:53:35,376] INFO [Controller 0]: New leader and ISR for partition [test2,1] is {"leader":1,"leader_epoch":15,"isr":[1,2]} (kafka.controller.KafkaController)
[2016-11-23 11:53:35,377] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,377] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=test2,Partition=1,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,377] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionStarted for replicas [Topic=test2,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,377] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=test2,Partition=1,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,377] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 11:53:35,377] INFO [Replica state machine on controller 0]: Invoking state change to ReplicaDeletionSuccessful for replicas [Topic=test2,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,377] INFO [Replica state machine on controller 0]: Invoking state change to NonExistentReplica for replicas [Topic=test2,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-23 11:53:35,384] DEBUG [Controller 0]: Updated path /brokers/topics/test2 with {"version":1,"partitions":{"1":[2,1],"0":[1,2]}} for replica assignment (kafka.controller.KafkaController)
[2016-11-23 11:53:35,384] INFO [Controller 0]: Updated assigned replicas for partition [test2,1] being reassigned to 2,1  (kafka.controller.KafkaController)
[2016-11-23 11:53:35,389] INFO [Controller 0]: Removed partition [test2,1] from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2016-11-23 11:53:35,391] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":15,"isr":[1,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,392] DEBUG [ReassignedPartitionsIsrChangeListener on controller 0]: Reassigned partitions isr change listener fired for path /brokers/topics/test2/partitions/1/state with children {"controller_epoch":4,"leader":1,"version":1,"leader_epoch":15,"isr":[1,2]} (kafka.controller.ReassignedPartitionsIsrChangeListener)
[2016-11-23 11:53:35,392] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"1":[2,1],"0":[1,2]}} for path /brokers/topics/test2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-23 11:53:37,040] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:53:37,043] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([test2,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:53:37,047] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:53:37,535] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:53:37,537] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([test2,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:53:37,539] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-23 11:56:23,592] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [test2,1] -> List(2, 1), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,0] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] DEBUG [Controller 0]: topics not in preferred replica Map([test2,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.055556 (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] TRACE [Controller 0]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-23 11:56:23,593] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
