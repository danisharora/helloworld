[2016-11-15 14:09:00,051] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 14:09:02,755] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 14:09:02,756] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-15 14:09:02,756] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.962963 (kafka.controller.KafkaController)
[2016-11-15 14:09:02,759] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:09:02,759] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:09:02,759] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:09:02,759] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:09:02,790] INFO [SessionExpirationListener on 1], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-11-15 14:09:02,791] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-11-15 14:09:02,792] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-15 14:09:02,795] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:02,796] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:09:02,799] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 14:09:02,799] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 14:09:02,799] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 14:09:02,802] INFO [Controller-1-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 14:09:02,802] INFO [Controller-1-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 14:09:02,802] INFO [Controller-1-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 14:09:02,803] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
[2016-11-15 14:09:03,111] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-11-15 14:09:03,131] INFO [Controller 1]: Initialized controller epoch to 20 and zk version 19 (kafka.controller.KafkaController)
[2016-11-15 14:09:03,137] INFO [Controller 1]: Controller 1 incremented epoch to 21 (kafka.controller.KafkaController)
[2016-11-15 14:09:03,143] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-15 14:09:03,436] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-11-15 14:09:03,436] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-11-15 14:09:03,436] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-11-15 14:09:03,436] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-11-15 14:09:03,436] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-11-15 14:09:03,436] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-11-15 14:09:03,437] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-11-15 14:09:03,437] INFO [Controller 1]: List of topics ineligible for deletion: __consumer_offsets,othertopic,topic1,mytopic (kafka.controller.KafkaController)
[2016-11-15 14:09:03,437] INFO [Controller 1]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-11-15 14:09:03,438] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-11-15 14:09:03,438] INFO [Controller 1]: Current list of topics in the cluster: Set(topic1, mytopic, othertopic, __consumer_offsets) (kafka.controller.KafkaController)
[2016-11-15 14:09:03,439] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=1] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=1] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=1] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=2] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=2] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=1] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=44,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=41,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=1] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=2,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=35,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=1] -> ReplicaDeletionIneligible, [Topic=mytopic,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=1] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=1] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=8,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=2] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=27,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic1,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=1] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:09:03,445] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,19]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,451] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,608] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,47]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,612] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,29]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,617] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,41]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,622] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,39]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,628] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,17]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,635] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,640] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,646] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,651] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,657] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,663] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,669] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,675] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,33]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,682] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [othertopic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,690] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,697] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,21]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,702] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,3]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,708] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,5]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,712] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,716] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [othertopic,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,721] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,727] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,735] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,23]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,748] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,15]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,769] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,774] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,11]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,780] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,13]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,788] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,794] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,49]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,799] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,806] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,813] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,37]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:03,821] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,31]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,439] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,448] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,458] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,479] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,526] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,532] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,25]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:04,565] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,27]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,050] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,45]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,056] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,063] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,43]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,069] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [othertopic,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,075] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,510] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,514] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,35]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,519] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,7]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,524] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,528] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,9]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,533] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,1]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,537] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,542] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:05,543] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OfflinePartition, [__consumer_offsets,30] -> OfflinePartition, [__consumer_offsets,47] -> OfflinePartition, [__consumer_offsets,29] -> OfflinePartition, [__consumer_offsets,41] -> OfflinePartition, [__consumer_offsets,39] -> OfflinePartition, [__consumer_offsets,17] -> OfflinePartition, [__consumer_offsets,10] -> OfflinePartition, [__consumer_offsets,14] -> OfflinePartition, [__consumer_offsets,40] -> OfflinePartition, [__consumer_offsets,18] -> OfflinePartition, [__consumer_offsets,0] -> OfflinePartition, [__consumer_offsets,26] -> OfflinePartition, [__consumer_offsets,24] -> OfflinePartition, [__consumer_offsets,33] -> OfflinePartition, [othertopic,0] -> OfflinePartition, [__consumer_offsets,20] -> OfflinePartition, [__consumer_offsets,21] -> OfflinePartition, [__consumer_offsets,3] -> OfflinePartition, [__consumer_offsets,5] -> OfflinePartition, [__consumer_offsets,22] -> OfflinePartition, [othertopic,1] -> OfflinePartition, [__consumer_offsets,12] -> OfflinePartition, [__consumer_offsets,8] -> OfflinePartition, [__consumer_offsets,23] -> OfflinePartition, [__consumer_offsets,15] -> OfflinePartition, [__consumer_offsets,48] -> OfflinePartition, [__consumer_offsets,11] -> OfflinePartition, [__consumer_offsets,13] -> OfflinePartition, [__consumer_offsets,6] -> OfflinePartition, [__consumer_offsets,49] -> OfflinePartition, [__consumer_offsets,4] -> OfflinePartition, [__consumer_offsets,28] -> OfflinePartition, [__consumer_offsets,37] -> OfflinePartition, [__consumer_offsets,31] -> OfflinePartition, [__consumer_offsets,44] -> OfflinePartition, [__consumer_offsets,42] -> OfflinePartition, [__consumer_offsets,34] -> OfflinePartition, [topic1,0] -> OfflinePartition, [__consumer_offsets,46] -> OfflinePartition, [__consumer_offsets,25] -> OfflinePartition, [__consumer_offsets,27] -> OfflinePartition, [__consumer_offsets,45] -> OfflinePartition, [__consumer_offsets,32] -> OfflinePartition, [__consumer_offsets,43] -> OfflinePartition, [othertopic,2] -> OfflinePartition, [__consumer_offsets,36] -> OfflinePartition, [mytopic,0] -> OfflinePartition, [__consumer_offsets,35] -> OfflinePartition, [__consumer_offsets,7] -> OfflinePartition, [__consumer_offsets,38] -> OfflinePartition, [__consumer_offsets,9] -> OfflinePartition, [__consumer_offsets,1] -> OfflinePartition, [__consumer_offsets,2] -> OfflinePartition, [__consumer_offsets,16] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:05,544] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 21 (kafka.controller.KafkaController)
[2016-11-15 14:09:05,544] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-11-15 14:09:05,544] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:05,578] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-11-15 14:09:05,606] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:05,873] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer() for TopicAndPartitions:Set([othertopic,2], [othertopic,0], [othertopic,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:05,950] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:09:05,993] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 0,1, deleted brokers: , all live brokers: 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:09:05,994] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-11-15 14:09:05,996] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-11-15 14:09:06,020] INFO [Controller 1]: New broker startup callback for 0,1 (kafka.controller.KafkaController)
[2016-11-15 14:09:06,022] INFO [Controller-1-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-15 14:09:06,027] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-15 14:09:06,028] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 14:09:06,046] INFO [Controller-1-to-broker-0-send-thread], Controller 1 connected to Node(0, 172.16.26.72, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 14:09:06,051] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=1],[Topic=__consumer_offsets,Partition=48,Replica=1],[Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=21,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=1],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=1],[Topic=othertopic,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=1],[Topic=__consumer_offsets,Partition=19,Replica=1],[Topic=__consumer_offsets,Partition=10,Replica=1],[Topic=mytopic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=1],[Topic=__consumer_offsets,Partition=43,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=1],[Topic=__consumer_offsets,Partition=27,Replica=1],[Topic=__consumer_offsets,Partition=6,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=1],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=3,Replica=1],[Topic=__consumer_offsets,Partition=13,Replica=1],[Topic=__consumer_offsets,Partition=4,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=1],[Topic=__consumer_offsets,Partition=49,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=45,Replica=1],[Topic=__consumer_offsets,Partition=37,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=othertopic,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=othertopic,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=othertopic,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=7,Replica=1],[Topic=__consumer_offsets,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=34,Replica=1],[Topic=__consumer_offsets,Partition=33,Replica=1],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=__consumer_offsets,Partition=25,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=othertopic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=1],[Topic=othertopic,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=1],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=15,Replica=1],[Topic=__consumer_offsets,Partition=17,Replica=1],[Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:09:06,070] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,19]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,071] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,19] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,073] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,075] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,30]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,075] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,30] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,078] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,080] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,47]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,080] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,47] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,083] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,155] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,29]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,156] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,29] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,223] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,229] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,41]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,229] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,41] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,231] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,233] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,39]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,233] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,39] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,235] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,237] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,17]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,237] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,17] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,239] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,241] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,10]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,241] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,10] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,244] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,246] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,14]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,247] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,14] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,249] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,252] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,40]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,253] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":6,"isr":[1]} for offline partition [__consumer_offsets,40] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,259] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,261] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,18]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,262] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,18] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,292] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,295] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,0]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,295] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,297] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,300] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,26]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,300] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,26] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,498] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,501] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,24]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,501] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,24] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,507] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,510] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,33]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,510] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,33] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,577] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:12,ControllerEpoch:19), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,579] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [othertopic,0]. Select 1 from ISR 1,0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,579] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":13,"isr":[1,0]} for offline partition [othertopic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,582] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,585] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,20]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,585] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,20] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,588] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,589] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,21]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,590] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,21] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,591] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,593] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,3]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,593] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,3] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,595] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,597] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,5]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,597] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,5] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,600] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,601] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,22]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,601] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,22] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,603] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:14,ControllerEpoch:19), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,604] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [othertopic,1]. Select 0 from ISR 1,0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,604] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":15,"isr":[1,0]} for offline partition [othertopic,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,606] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,608] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,12]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,608] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,12] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,610] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,613] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,8]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,613] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,8] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,614] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,616] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,23]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,617] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,23] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,714] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,717] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,15]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,717] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,15] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,786] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,788] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,48]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,788] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,48] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,810] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,813] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,11]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,813] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,11] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,817] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,819] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,13]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,819] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,13] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,823] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,825] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,6]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,825] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,6] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,826] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:06,828] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,49]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,828] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,49] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:06,997] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,000] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,4]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,000] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,4] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,015] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,016] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,28]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,016] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,28] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,025] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,027] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,37]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,027] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,37] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,065] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,068] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,31]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,068] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,31] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,069] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,071] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,44]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,071] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,44] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,072] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,074] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,42]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,074] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,42] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,075] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,076] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,34]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,076] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,34] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,078] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,080] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,082] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,46]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,082] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":6,"isr":[1]} for offline partition [__consumer_offsets,46] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,083] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,085] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,25]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,085] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,25] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,086] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,088] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,27]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,089] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,27] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,090] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,092] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,45]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,092] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,45] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,093] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:19), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,095] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,32]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,095] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":6,"isr":[1]} for offline partition [__consumer_offsets,32] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,096] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,098] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,43]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,098] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,43] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,099] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:16,ControllerEpoch:20), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,100] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [othertopic,2]. Select 0 from ISR 0,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,100] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":17,"isr":[0,1]} for offline partition [othertopic,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,102] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,103] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,36]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,103] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,36] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,105] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:18,ControllerEpoch:19), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,106] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [mytopic,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,106] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":19,"isr":[0]} for offline partition [mytopic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,193] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,195] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,35]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,195] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,35] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,244] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,248] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,7]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,248] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,7] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,250] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,252] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,38]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,252] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,38] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,253] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,255] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,9]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,255] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,9] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,256] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,258] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,1]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,258] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,259] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,260] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,2]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,261] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,262] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:19)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,263] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,16]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,263] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":7,"isr":[1]} for offline partition [__consumer_offsets,16] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:09:07,264] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:13,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:0,ISR:1,0,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:09:07,281] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children topic1,mytopic,othertopic,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-11-15 14:09:07,282] INFO [TopicChangeListener on Controller 1]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-11-15 14:09:07,287] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"2":[0,1,2],"1":[2,0,1],"0":[1,2,0]}} for path /brokers/topics/othertopic (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-15 14:09:07,291] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/mytopic (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-15 14:09:07,292] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"0":[2]}} for path /brokers/topics/topic1 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-15 14:09:07,294] INFO [AddPartitionsListener on 1]: Add Partition triggered {"version":1,"partitions":{"45":[2,1],"34":[1,2],"12":[1,2],"8":[1,2],"19":[2,1],"23":[2,1],"4":[1,2],"40":[1,2],"15":[2,1],"11":[2,1],"9":[2,1],"44":[1,2],"33":[2,1],"22":[1,2],"26":[1,2],"37":[2,1],"13":[2,1],"46":[1,2],"24":[1,2],"35":[2,1],"16":[1,2],"5":[2,1],"10":[1,2],"48":[1,2],"21":[2,1],"43":[2,1],"32":[1,2],"49":[2,1],"6":[1,2],"36":[1,2],"1":[2,1],"39":[2,1],"17":[2,1],"25":[2,1],"14":[1,2],"47":[2,1],"31":[2,1],"42":[1,2],"0":[1,2],"20":[1,2],"27":[2,1],"2":[1,2],"38":[1,2],"18":[1,2],"30":[1,2],"7":[2,1],"29":[2,1],"41":[2,1],"3":[2,1],"28":[1,2]}} for path /brokers/topics/__consumer_offsets (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-15 14:09:07,304] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:07,304] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:09:07,308] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: , all live brokers: 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:09:07,308] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:10,585] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 14:09:10,585] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 14:09:10,586] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-15 14:09:10,586] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.962963 (kafka.controller.KafkaController)
[2016-11-15 14:09:10,586] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:09:10,586] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:09:10,586] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:09:10,586] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:09:10,705] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:10,710] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,0], [othertopic,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:10,713] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:11,236] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:11,239] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,2]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:11,243] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:48,206] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:48,245] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:48,260] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:48,735] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:48,740] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,2], [othertopic,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:09:48,742] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:10:18,263] WARN [Controller-1-to-broker-0-send-thread], Controller 1 epoch 21 fails to send request {controller_id=1,controller_epoch=21,partition_states=[{topic=othertopic,partition=0,controller_epoch=21,leader=1,leader_epoch=13,isr=[1],zk_version=29,replicas=[1,2,0]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(0, 172.16.26.72, 9092). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:10:18,263] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 21 fails to send request {controller_id=1,controller_epoch=21,partition_states=[{topic=othertopic,partition=0,controller_epoch=21,leader=1,leader_epoch=13,isr=[1],zk_version=29,replicas=[1,2,0]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(1, 172.16.26.72, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:10:48,570] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:10:48,570] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:11:18,872] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:11:18,872] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:11:49,181] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:11:49,181] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:12:19,483] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:12:19,483] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:12:49,785] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:12:49,785] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:13:20,089] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:13:20,089] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:13:50,396] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:13:50,396] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:14:10,576] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 14:14:10,577] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 14:14:10,578] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-15 14:14:10,580] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.962963 (kafka.controller.KafkaController)
[2016-11-15 14:14:10,580] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:14:10,580] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:14:10,580] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:14:10,580] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:14:20,700] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:14:20,701] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:14:48,218] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:14:48,251] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:14:48,272] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:14:48,729] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:14:48,737] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,2], [othertopic,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:14:48,746] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:14:51,004] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:14:51,007] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:14:51,309] INFO [Controller-1-to-broker-0-send-thread], Controller 1 connected to Node(0, 172.16.26.72, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 14:14:51,309] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 14:19:10,557] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 14:19:10,579] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 14:19:10,579] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-15 14:19:10,580] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.962963 (kafka.controller.KafkaController)
[2016-11-15 14:19:10,580] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:19:10,580] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:19:10,580] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:19:10,580] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:24:10,546] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.962963 (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 14:24:10,593] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 14:27:29,581] INFO [Controller 1]: Shutting down broker 0 (kafka.controller.KafkaController)
[2016-11-15 14:27:29,593] DEBUG [Controller 1]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2016-11-15 14:27:29,593] DEBUG [Controller 1]: Live brokers: 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:29,601] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 14:27:29,601] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 14:27:29,603] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:27:29,604] WARN [Controller-1-to-broker-0-send-thread], Controller 1 epoch 21 fails to send request {controller_id=1,controller_epoch=21,delete_partitions=0,partitions=[{topic=othertopic,partition=0}]} to broker Node(0, 172.16.26.72, 9092). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:29,604] DEBUG [Controller 1]: Removing replica 0 from ISR 1,0 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-15 14:27:29,663] INFO [Controller 1]: New leader and ISR for partition [othertopic,0] is {"leader":1,"leader_epoch":14,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 14:27:29,694] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=21,partition_states=[{topic=othertopic,partition=0,controller_epoch=21,leader=1,leader_epoch=14,isr=[1],zk_version=31,replicas=[1,2,0]}],live_leaders=[{id=1,host=172.16.26.72,port=9093}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:29,694] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 14:27:29,694] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 14:27:29,694] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 21 fails to send request {controller_id=1,controller_epoch=21,partition_states=[{topic=othertopic,partition=0,controller_epoch=21,leader=1,leader_epoch=14,isr=[1],zk_version=31,replicas=[1,2,0]}],live_leaders=[{id=1,host=172.16.26.72,port=9093}]} to broker Node(1, 172.16.26.72, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:29,694] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:29,698] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,1] : current leader = 0, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 14:27:29,699] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:14,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:0,ISR:0,1,LeaderEpoch:17,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:29,700] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:29,702] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,2] : current leader = 0, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 14:27:29,703] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:14,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:29,705] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:14,ControllerEpoch:21),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:21),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21) (kafka.controller.KafkaController)
[2016-11-15 14:27:29,910] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:29,997] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 14:27:30,216] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:30,521] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:30,667] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:27:30,670] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([othertopic,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:27:30,672] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 14:27:30,826] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:31,131] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:31,432] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:31,737] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:31,773] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:27:31,775] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: 0, all live brokers: 1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:27:31,776] INFO [Controller-1-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 14:27:31,776] INFO [Controller-1-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 14:27:31,776] INFO [Controller-1-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 14:27:31,777] INFO [Controller 1]: Broker failure callback for 0 (kafka.controller.KafkaController)
[2016-11-15 14:27:31,778] INFO [Controller 1]: Removed ArrayBuffer(0) from list of shutting down brokers. (kafka.controller.KafkaController)
[2016-11-15 14:27:31,780] INFO [Partition state machine on Controller 1]: Invoking state change to OfflinePartition for partitions [mytopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:31,785] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:31,790] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:31,792] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=0,Replica=0],[Topic=othertopic,Partition=1,Replica=0],[Topic=othertopic,Partition=2,Replica=0],[Topic=mytopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:27:31,792] DEBUG [Controller 1]: Removing replica 0 from ISR 1,0 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-15 14:27:31,796] INFO [Controller 1]: New leader and ISR for partition [othertopic,0] is {"leader":1,"leader_epoch":15,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 14:27:31,796] DEBUG [Controller 1]: Removing replica 0 from ISR 1 for partition [othertopic,1]. (kafka.controller.KafkaController)
[2016-11-15 14:27:31,799] WARN [Controller 1]: Cannot remove replica 0 from ISR of partition [othertopic,1] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 14:27:31,799] DEBUG [Controller 1]: Removing replica 0 from ISR 1 for partition [othertopic,2]. (kafka.controller.KafkaController)
[2016-11-15 14:27:31,801] WARN [Controller 1]: Cannot remove replica 0 from ISR of partition [othertopic,2] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 14:27:31,801] DEBUG [Controller 1]: Removing replica 0 from ISR 0 for partition [mytopic,0]. (kafka.controller.KafkaController)
[2016-11-15 14:27:31,805] INFO [Controller 1]: New leader and ISR for partition [mytopic,0] is {"leader":-1,"leader_epoch":20,"isr":[]} (kafka.controller.KafkaController)
[2016-11-15 14:27:31,805] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=21,partition_states=[{topic=othertopic,partition=1,controller_epoch=21,leader=1,leader_epoch=16,isr=[1],zk_version=33,replicas=[2,0,1]},{topic=othertopic,partition=0,controller_epoch=21,leader=1,leader_epoch=15,isr=[1],zk_version=33,replicas=[1,2,0]},{topic=othertopic,partition=2,controller_epoch=21,leader=1,leader_epoch=18,isr=[1],zk_version=33,replicas=[0,1,2]}],live_leaders=[{id=1,host=172.16.26.72,port=9093}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:31,806] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 14:27:31,807] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=0,Replica=0],[Topic=othertopic,Partition=1,Replica=0],[Topic=othertopic,Partition=2,Replica=0],[Topic=mytopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 14:27:31,807] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=21,delete_partitions=0,partitions=[{topic=othertopic,partition=0}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:31,807] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=21,delete_partitions=0,partitions=[{topic=othertopic,partition=1}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:31,807] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=21,delete_partitions=0,partitions=[{topic=othertopic,partition=2}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:31,807] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=21,delete_partitions=0,partitions=[{topic=mytopic,partition=0}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:41,230] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:41,230] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:41,230] DEBUG [Controller 1]: Live brokers:  (kafka.controller.KafkaController)
[2016-11-15 14:27:41,231] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,235] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,237] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,240] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,242] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,244] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,246] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,248] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,251] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,253] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,256] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,261] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,264] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,267] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,270] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,272] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,275] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,277] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,279] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,282] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,285] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,287] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,289] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,291] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,293] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,296] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,298] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,300] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,302] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,305] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,307] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,309] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,313] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,316] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,318] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,321] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,324] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,326] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,329] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,331] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,334] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,336] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,339] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,341] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,344] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,347] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,350] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,352] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,355] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,357] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,360] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,362] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,365] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:41,367] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:21),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:20,ControllerEpoch:21),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21) (kafka.controller.KafkaController)
[2016-11-15 14:27:46,380] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:46,380] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:46,380] DEBUG [Controller 1]: Live brokers:  (kafka.controller.KafkaController)
[2016-11-15 14:27:46,381] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,388] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,392] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,404] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,410] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,415] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,418] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,422] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,426] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,430] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,435] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,438] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,442] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,446] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,450] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,454] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,457] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,461] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,464] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,473] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,476] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,480] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,483] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,486] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,489] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,493] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,496] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,499] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,503] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,506] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,509] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,513] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,517] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,520] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,524] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,527] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,531] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,534] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,538] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,541] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,559] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,563] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,567] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,570] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,572] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:27:46,578] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,583] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,600] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:27:46,601] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:46,602] INFO [Controller 1]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-11-15 14:27:46,603] INFO [Controller-1-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-15 14:27:46,613] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=othertopic,Partition=0,Replica=0],[Topic=othertopic,Partition=1,Replica=0],[Topic=othertopic,Partition=2,Replica=0],[Topic=mytopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:27:46,619] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:46,625] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Pick the leader from the alive assigned replicas: 0 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:46,626] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Elect leader 0 from live brokers 0. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:46,626] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":21,"isr":[0]} for offline partition [mytopic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:46,629] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:21,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,630] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,633] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,637] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,640] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,644] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,647] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,650] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:46,655] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:21),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:21,ControllerEpoch:21),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21) (kafka.controller.KafkaController)
[2016-11-15 14:27:51,667] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:51,667] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:51,667] DEBUG [Controller 1]: Live brokers: 0 (kafka.controller.KafkaController)
[2016-11-15 14:27:51,667] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,670] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,672] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,675] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,677] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,680] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,683] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,687] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,690] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,692] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,694] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,697] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,700] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,702] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,704] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,707] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,709] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,711] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,713] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,715] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,717] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,720] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,722] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,725] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,728] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,730] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,733] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,736] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,739] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,743] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,746] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,750] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,754] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,758] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,760] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,763] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,767] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,769] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,772] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,774] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,777] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,779] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,783] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,785] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,788] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,791] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,794] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,796] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,799] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,802] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,805] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,807] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,810] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:51,813] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:21),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:18),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:21,ControllerEpoch:21),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21) (kafka.controller.KafkaController)
[2016-11-15 14:27:55,202] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:27:55,221] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 14:27:55,221] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-11-15 14:27:55,225] INFO [Controller 1]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-11-15 14:27:55,227] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-15 14:27:55,237] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=othertopic,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=topic1,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=othertopic,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=othertopic,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:27:55,263] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [topic1,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:55,263] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":4,"isr":[2]} for offline partition [topic1,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 14:27:55,277] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:21), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,1] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:21), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:4,ControllerEpoch:21), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:6,ControllerEpoch:21), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:18,ControllerEpoch:21), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:21,ControllerEpoch:21), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:21)) (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:58,688] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-11-15 14:27:58,688] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-15 14:27:58,689] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-15 14:27:58,689] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-15 14:27:58,690] WARN [Controller-1-to-broker-2-send-thread], Controller 1's connection to broker Node(2, localhost:9093, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, localhost:9093, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:58,690] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,691] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,691] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,692] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,692] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,692] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,692] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, localhost:9094, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, localhost:9094, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 14:27:58,693] INFO [Controller-1-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,693] INFO [Controller-1-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,693] INFO [Controller-1-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 14:27:58,693] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
