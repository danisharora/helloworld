[2016-11-17 18:11:51,494] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-11-17 18:11:51,726] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-11-17 18:11:51,726] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-17 18:11:51,726] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:51,726] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:11:51,729] INFO [Controller-0-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,729] INFO [Controller-0-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,496] INFO [SessionExpirationListener on 2], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-11-17 18:11:51,729] INFO [Controller-0-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,733] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-11-17 18:11:51,733] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-17 18:11:51,733] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:51,733] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:11:51,733] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-11-17 18:11:51,741] INFO [Controller-0-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,741] INFO [Controller-0-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,741] INFO [Controller-0-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,743] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,743] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,743] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-17 18:11:51,743] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2016-11-17 18:11:51,919] INFO [Controller 2]: Broker 2 starting become controller state transition (kafka.controller.KafkaController)
[2016-11-17 18:11:52,217] INFO [Controller 2]: Initialized controller epoch to 59 and zk version 58 (kafka.controller.KafkaController)
[2016-11-17 18:11:52,222] INFO [Controller 2]: Controller 2 incremented epoch to 60 (kafka.controller.KafkaController)
[2016-11-17 18:11:52,224] DEBUG [Controller 2]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-17 18:11:52,230] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:11:52,231] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-17 18:11:52,239] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"2":[0,1,2],"1":[2,0,1],"0":[1,2,0]}} for path /brokers/topics/othertopic (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:52,242] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/mytopic (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:52,244] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[2]}} for path /brokers/topics/topic1 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:52,247] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"2":[2],"1":[1],"0":[0]}} for path /brokers/topics/topic3 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:52,249] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"2":[0,2,1],"1":[2,1,0],"0":[1,0,2]}} for path /brokers/topics/topic2 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:52,252] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"45":[2,1],"34":[1,2],"12":[1,2],"8":[1,2],"19":[2,1],"23":[2,1],"4":[1,2],"40":[1,2],"15":[2,1],"11":[2,1],"9":[2,1],"44":[1,2],"33":[2,1],"22":[1,2],"26":[1,2],"37":[2,1],"13":[2,1],"46":[1,2],"24":[1,2],"35":[2,1],"16":[1,2],"5":[2,1],"10":[1,2],"48":[1,2],"21":[2,1],"43":[2,1],"32":[1,2],"49":[2,1],"6":[1,2],"36":[1,2],"1":[2,1],"39":[2,1],"17":[2,1],"25":[2,1],"14":[1,2],"47":[2,1],"31":[2,1],"42":[1,2],"0":[1,2],"20":[1,2],"27":[2,1],"2":[1,2],"38":[1,2],"18":[1,2],"30":[1,2],"7":[2,1],"29":[2,1],"41":[2,1],"3":[2,1],"28":[1,2]}} for path /brokers/topics/__consumer_offsets (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:52,523] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0,1]}} for path /brokers/topics/topic4 (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-11-17 18:11:54,229] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-11-17 18:11:54,230] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-11-17 18:11:54,231] INFO [Controller-2-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-17 18:11:54,232] INFO [Controller-2-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-17 18:11:54,232] INFO [Controller 2]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-11-17 18:11:54,232] INFO [Controller 2]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-11-17 18:11:54,232] INFO [Controller 2]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: List of topics ineligible for deletion: topic2,topic1,__consumer_offsets,topic3,othertopic (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: Currently active brokers in the cluster: Set(0, 1) (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-11-17 18:11:54,233] INFO [Controller 2]: Current list of topics in the cluster: Set(topic2, topic1, __consumer_offsets, topic4, mytopic, topic3, othertopic) (kafka.controller.KafkaController)
[2016-11-17 18:11:54,234] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=1],[Topic=__consumer_offsets,Partition=48,Replica=1],[Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=21,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=1],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=1],[Topic=othertopic,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=39,Replica=1],[Topic=topic3,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=1],[Topic=topic2,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=19,Replica=1],[Topic=__consumer_offsets,Partition=10,Replica=1],[Topic=mytopic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=22,Replica=1],[Topic=__consumer_offsets,Partition=43,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=1],[Topic=__consumer_offsets,Partition=27,Replica=1],[Topic=__consumer_offsets,Partition=6,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=1],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=3,Replica=1],[Topic=__consumer_offsets,Partition=13,Replica=1],[Topic=__consumer_offsets,Partition=4,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=1],[Topic=__consumer_offsets,Partition=49,Replica=1],[Topic=topic4,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=45,Replica=1],[Topic=__consumer_offsets,Partition=37,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=othertopic,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=othertopic,Partition=2,Replica=0],[Topic=topic2,Partition=1,Replica=0],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=topic2,Partition=0,Replica=0],[Topic=othertopic,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=7,Replica=1],[Topic=topic2,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=34,Replica=1],[Topic=topic2,Partition=2,Replica=0],[Topic=__consumer_offsets,Partition=33,Replica=1],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=topic3,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=__consumer_offsets,Partition=25,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=othertopic,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=36,Replica=1],[Topic=othertopic,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=1],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=15,Replica=1],[Topic=__consumer_offsets,Partition=17,Replica=1],[Topic=topic4,Partition=0,Replica=0],[Topic=__consumer_offsets,Partition=24,Replica=1],[Topic=topic2,Partition=2,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:11:54,256] INFO [Controller-2-to-broker-1-send-thread], Controller 2 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-17 18:11:54,257] INFO [Controller-2-to-broker-0-send-thread], Controller 2 connected to Node(0, 172.16.26.72, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-17 18:11:54,266] INFO [Replica state machine on controller 2]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=othertopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic3,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic2,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic2,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=othertopic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic3,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic2,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=11,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=topic4,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=othertopic,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=topic2,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=15,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=topic2,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=2] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=2,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=othertopic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=topic2,Partition=1,Replica=1] -> OnlineReplica, [Topic=othertopic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=topic2,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=topic4,Partition=0,Replica=1] -> OnlineReplica, [Topic=mytopic,Partition=0,Replica=0] -> OnlineReplica, [Topic=topic3,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=othertopic,Partition=1,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=20,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=2] -> ReplicaDeletionIneligible, [Topic=othertopic,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=25,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic2,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic2,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> ReplicaDeletionIneligible, [Topic=topic1,Partition=0,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=2] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:11:54,275] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,19]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,276] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,19] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,432] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,1] -> (Leader:2,ISR:2,0,1,LeaderEpoch:17,ControllerEpoch:53), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,437] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,440] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,30]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,440] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,30] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,470] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,1] -> (Leader:2,ISR:2,0,1,LeaderEpoch:17,ControllerEpoch:53), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,472] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,47]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,472] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,47] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,474] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,1] -> (Leader:2,ISR:2,0,1,LeaderEpoch:17,ControllerEpoch:53), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,475] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,29]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,475] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,29] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,477] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,1] -> (Leader:2,ISR:2,0,1,LeaderEpoch:17,ControllerEpoch:53), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,479] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,41]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,479] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,41] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,481] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:2,ISR:2,0,1,LeaderEpoch:17,ControllerEpoch:53), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,483] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [topic2,1]. Select 1 from ISR 0,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,483] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":18,"isr":[0,1]} for offline partition [topic2,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,487] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,490] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,39]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,490] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,39] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,492] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,494] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,17]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,494] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,17] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,497] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,502] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,503] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,10]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,503] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,10] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,505] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,508] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,508] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,14]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,508] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,14] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,510] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,513] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,513] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,40]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,513] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":34,"isr":[1]} for offline partition [__consumer_offsets,40] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,593] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,596] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,596] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,18]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,596] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,18] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,655] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,658] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,658] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,0]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,658] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,661] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,663] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,663] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,26]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,663] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,26] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,664] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,667] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,667] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,24]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,667] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,24] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,669] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,670] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,33]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,670] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,33] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,671] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:49,ControllerEpoch:58), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,673] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [othertopic,0]. Pick the leader from the alive assigned replicas: 1,0 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,673] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [othertopic,0]. Elect leader 1 from live brokers 1,0. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,673] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":50,"isr":[1]} for offline partition [othertopic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,674] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,676] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,676] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,20]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,676] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,20] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,677] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,679] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,21]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,679] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,21] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,680] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,681] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,3]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,681] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,3] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,682] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,683] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,5]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,683] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,5] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,685] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,687] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,687] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,22]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,687] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,22] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,688] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:53,ControllerEpoch:53), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,689] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [othertopic,1]. Select 0 from ISR 0,1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,689] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":54,"isr":[0,1]} for offline partition [othertopic,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,691] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,693] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,693] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,12]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,693] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,12] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,694] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,697] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,697] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,8]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,697] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,8] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,850] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,851] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,23]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,851] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,23] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,892] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,894] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,15]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,894] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,15] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,895] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,898] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,898] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,48]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,898] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,48] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,899] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,901] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,11]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,901] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,11] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,902] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,903] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,13]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,903] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,13] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,905] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,907] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,907] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,6]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,907] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,6] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,908] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,909] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,49]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,909] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,49] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,910] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,912] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,913] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,4]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,913] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,4] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,914] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,916] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,916] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,28]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,916] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,28] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,917] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,918] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,37]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,918] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,37] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,919] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:53), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,920] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,31]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,920] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,31] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,921] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,924] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,924] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,44]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,924] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,44] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,925] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,928] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,929] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,42]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,929] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,42] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,930] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:54,933] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,933] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,34]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:54,934] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,34] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,015] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,017] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,020] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,020] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,46]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,021] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":34,"isr":[1]} for offline partition [__consumer_offsets,46] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,079] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,081] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic3,2]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,084] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,25]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,084] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":37,"isr":[1]} for offline partition [__consumer_offsets,25] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,085] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,086] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,27]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,086] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,27] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,087] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,089] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,45]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,089] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,45] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,090] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:33,ControllerEpoch:58), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,092] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,092] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,32]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,092] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":34,"isr":[1]} for offline partition [__consumer_offsets,32] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,094] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:2,ISR:2,LeaderEpoch:7,ControllerEpoch:59), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,095] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic2,2]. Pick the leader from the alive assigned replicas: 0,1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,095] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic2,2]. Elect leader 0 from live brokers 0,1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,095] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":8,"isr":[0]} for offline partition [topic2,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,096] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,098] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,43]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,098] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,43] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,099] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,101] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,101] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,36]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,101] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,36] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,103] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,104] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,35]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,104] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":37,"isr":[1]} for offline partition [__consumer_offsets,35] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,105] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:35,ControllerEpoch:53), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,106] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,7]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,106] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,7] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,107] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,109] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,109] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,38]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,109] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,38] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,111] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,112] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,9]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,112] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":37,"isr":[1]} for offline partition [__consumer_offsets,9] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,113] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:36,ControllerEpoch:53), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,115] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [__consumer_offsets,1]. Select 1 from ISR 1 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,115] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":37,"isr":[1]} for offline partition [__consumer_offsets,1] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,116] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:34,ControllerEpoch:58), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,118] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,118] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,2]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,118] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":35,"isr":[1]} for offline partition [__consumer_offsets,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,119] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:35,ControllerEpoch:58)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,123] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Pick the leader from the alive assigned replicas: 1 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,123] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [__consumer_offsets,16]. Elect leader 1 from live brokers 1. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,123] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":1,"leader_epoch":36,"isr":[1]} for offline partition [__consumer_offsets,16] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,250] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:21,ControllerEpoch:52), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,255] INFO [Partition state machine on Controller 2]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OnlinePartition, [__consumer_offsets,30] -> OnlinePartition, [__consumer_offsets,47] -> OnlinePartition, [__consumer_offsets,29] -> OnlinePartition, [__consumer_offsets,41] -> OnlinePartition, [topic2,1] -> OnlinePartition, [__consumer_offsets,39] -> OnlinePartition, [__consumer_offsets,17] -> OnlinePartition, [__consumer_offsets,10] -> OnlinePartition, [__consumer_offsets,14] -> OnlinePartition, [topic3,1] -> OnlinePartition, [__consumer_offsets,40] -> OnlinePartition, [__consumer_offsets,18] -> OnlinePartition, [__consumer_offsets,0] -> OnlinePartition, [__consumer_offsets,26] -> OnlinePartition, [__consumer_offsets,24] -> OnlinePartition, [__consumer_offsets,33] -> OnlinePartition, [othertopic,0] -> OnlinePartition, [__consumer_offsets,20] -> OnlinePartition, [__consumer_offsets,21] -> OnlinePartition, [__consumer_offsets,3] -> OnlinePartition, [__consumer_offsets,5] -> OnlinePartition, [__consumer_offsets,22] -> OnlinePartition, [othertopic,1] -> OnlinePartition, [__consumer_offsets,12] -> OnlinePartition, [topic2,0] -> OnlinePartition, [__consumer_offsets,8] -> OnlinePartition, [__consumer_offsets,23] -> OnlinePartition, [__consumer_offsets,15] -> OnlinePartition, [__consumer_offsets,48] -> OnlinePartition, [__consumer_offsets,11] -> OnlinePartition, [__consumer_offsets,13] -> OnlinePartition, [__consumer_offsets,6] -> OnlinePartition, [__consumer_offsets,49] -> OnlinePartition, [__consumer_offsets,4] -> OnlinePartition, [__consumer_offsets,28] -> OnlinePartition, [__consumer_offsets,37] -> OnlinePartition, [__consumer_offsets,31] -> OnlinePartition, [__consumer_offsets,44] -> OnlinePartition, [__consumer_offsets,42] -> OnlinePartition, [__consumer_offsets,34] -> OnlinePartition, [topic1,0] -> OfflinePartition, [__consumer_offsets,46] -> OnlinePartition, [topic3,2] -> OfflinePartition, [__consumer_offsets,25] -> OnlinePartition, [__consumer_offsets,27] -> OnlinePartition, [__consumer_offsets,45] -> OnlinePartition, [__consumer_offsets,32] -> OnlinePartition, [topic2,2] -> OnlinePartition, [__consumer_offsets,43] -> OnlinePartition, [othertopic,2] -> OnlinePartition, [__consumer_offsets,36] -> OnlinePartition, [mytopic,0] -> OnlinePartition, [__consumer_offsets,35] -> OnlinePartition, [__consumer_offsets,7] -> OnlinePartition, [__consumer_offsets,38] -> OnlinePartition, [__consumer_offsets,9] -> OnlinePartition, [__consumer_offsets,1] -> OnlinePartition, [topic4,0] -> OnlinePartition, [topic3,0] -> OnlinePartition, [__consumer_offsets,2] -> OnlinePartition, [__consumer_offsets,16] -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,257] INFO [Controller 2]: Broker 2 is ready to serve as the new controller with epoch 60 (kafka.controller.KafkaController)
[2016-11-17 18:11:55,258] INFO [Controller 2]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-11-17 18:11:55,258] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,310] INFO [Controller 2]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-11-17 18:11:55,318] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:11:55,361] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1) for TopicAndPartitions:Set([__consumer_offsets,49], [topic2,1], [__consumer_offsets,17], [__consumer_offsets,23], [__consumer_offsets,7], [__consumer_offsets,29], [__consumer_offsets,3], [__consumer_offsets,13], [__consumer_offsets,5], [__consumer_offsets,39], [othertopic,2], [__consumer_offsets,15], [__consumer_offsets,33], [__consumer_offsets,37], [__consumer_offsets,21], [othertopic,1], [__consumer_offsets,11], [__consumer_offsets,47], [__consumer_offsets,9], [topic2,0], [__consumer_offsets,31], [__consumer_offsets,43], [__consumer_offsets,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:11:55,404] INFO [BrokerChangeListener on Controller 2]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-17 18:11:55,409] INFO [BrokerChangeListener on Controller 2]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-17 18:11:55,409] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-11-17 18:11:55,410] INFO [Controller 2]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-11-17 18:11:55,410] INFO [Controller-2-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-17 18:11:55,413] INFO [Controller-2-to-broker-2-send-thread], Controller 2 connected to Node(2, 172.16.26.72, 9094) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-17 18:11:55,418] INFO [Replica state machine on controller 2]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=othertopic,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=topic1,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=topic2,Partition=0,Replica=2],[Topic=topic2,Partition=1,Replica=2],[Topic=topic3,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=othertopic,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=othertopic,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=topic2,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:11:55,429] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [topic1,0]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,429] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":22,"isr":[2]} for offline partition [topic1,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,484] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:52), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,486] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [topic3,2]. Select 2 from ISR 2 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,486] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":6,"isr":[2]} for offline partition [topic3,2] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-17 18:11:55,488] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:54,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:11:55,492] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:11:57,551] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:11:57,555] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([topic2,2], [othertopic,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:11:57,558] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:12:00,313] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-17 18:12:00,314] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic4,0] -> List(0, 1), [topic3,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-17 18:12:00,314] DEBUG [Controller 2]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-17 18:12:00,314] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.931034 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,314] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,19] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,314] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,316] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,19] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,318] WARN [Controller 2]: Partition [__consumer_offsets,19] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,318] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,47] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,318] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,319] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,47] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,320] WARN [Controller 2]: Partition [__consumer_offsets,47] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,320] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,29] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,320] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,321] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,29] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,322] WARN [Controller 2]: Partition [__consumer_offsets,29] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,322] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,41] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,322] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,323] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,41] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,324] WARN [Controller 2]: Partition [__consumer_offsets,41] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,324] INFO [Controller 2]: Starting preferred replica leader election for partitions [topic2,1] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,324] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic2,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,326] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [topic2,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,326] WARN [Controller 2]: Partition [topic2,1] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,326] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,39] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,326] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,327] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,39] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,328] WARN [Controller 2]: Partition [__consumer_offsets,39] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,328] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,17] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,328] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,329] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,17] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,330] WARN [Controller 2]: Partition [__consumer_offsets,17] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,330] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,33] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,330] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,332] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,33] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,333] WARN [Controller 2]: Partition [__consumer_offsets,33] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,333] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,3] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,333] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,334] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,3] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,335] WARN [Controller 2]: Partition [__consumer_offsets,3] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,335] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,21] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,335] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,336] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,21] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,337] WARN [Controller 2]: Partition [__consumer_offsets,21] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,337] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,5] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,337] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,338] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,5] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,339] WARN [Controller 2]: Partition [__consumer_offsets,5] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,339] INFO [Controller 2]: Starting preferred replica leader election for partitions [othertopic,1] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,339] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,340] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 0 for partition [othertopic,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,341] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:2,ISR:0,1,2,LeaderEpoch:55,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,1,2,LeaderEpoch:8,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:49,ControllerEpoch:59), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,342] INFO [Controller 2]: Partition [othertopic,1] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,343] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,23] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,343] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,347] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,23] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,348] WARN [Controller 2]: Partition [__consumer_offsets,23] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,348] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,15] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,348] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,351] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,15] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,352] WARN [Controller 2]: Partition [__consumer_offsets,15] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,352] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,11] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,352] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,355] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,11] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,356] WARN [Controller 2]: Partition [__consumer_offsets,11] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,356] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,13] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,357] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,358] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,13] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,358] WARN [Controller 2]: Partition [__consumer_offsets,13] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,358] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,49] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,358] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,359] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,49] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,360] WARN [Controller 2]: Partition [__consumer_offsets,49] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,360] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,37] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,360] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,361] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,37] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,362] WARN [Controller 2]: Partition [__consumer_offsets,37] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,362] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,31] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,362] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,363] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,31] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,363] WARN [Controller 2]: Partition [__consumer_offsets,31] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,364] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,25] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,364] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,365] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,25] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,366] WARN [Controller 2]: Partition [__consumer_offsets,25] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,366] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,45] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,366] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,367] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,45] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,368] WARN [Controller 2]: Partition [__consumer_offsets,45] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,368] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,27] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,368] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,369] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,27] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,369] WARN [Controller 2]: Partition [__consumer_offsets,27] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,370] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,43] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,370] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,371] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,43] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,371] WARN [Controller 2]: Partition [__consumer_offsets,43] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,371] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,35] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,371] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,372] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,35] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,373] WARN [Controller 2]: Partition [__consumer_offsets,35] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,373] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,7] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,373] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,374] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,7] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,374] WARN [Controller 2]: Partition [__consumer_offsets,7] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,374] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,9] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,374] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,375] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,9] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,375] WARN [Controller 2]: Partition [__consumer_offsets,9] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,375] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,1] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,376] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,376] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,377] WARN [Controller 2]: Partition [__consumer_offsets,1] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,377] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-17 18:12:00,377] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,377] DEBUG [Controller 2]: topics not in preferred replica Map([othertopic,2] -> List(0, 1, 2), [topic4,0] -> List(0, 1)) (kafka.controller.KafkaController)
[2016-11-17 18:12:00,377] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.400000 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,377] INFO [Controller 2]: Starting preferred replica leader election for partitions [othertopic,2] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,377] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,378] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [othertopic,2] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,379] WARN [Controller 2]: Partition [othertopic,2] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,379] INFO [Controller 2]: Starting preferred replica leader election for partitions [topic4,0] (kafka.controller.KafkaController)
[2016-11-17 18:12:00,379] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic4,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:12:00,380] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [topic4,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:12:00,380] WARN [Controller 2]: Partition [topic4,0] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:12:00,860] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:12:00,893] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,49], [topic2,1], [__consumer_offsets,17], [__consumer_offsets,23], [__consumer_offsets,7], [__consumer_offsets,29], [__consumer_offsets,35], [__consumer_offsets,3], [__consumer_offsets,41], [__consumer_offsets,13], [__consumer_offsets,5], [__consumer_offsets,39], [__consumer_offsets,45], [__consumer_offsets,15], [__consumer_offsets,33], [__consumer_offsets,37], [__consumer_offsets,21], [othertopic,1], [__consumer_offsets,11], [__consumer_offsets,47], [__consumer_offsets,27], [__consumer_offsets,9], [__consumer_offsets,25], [__consumer_offsets,31], [__consumer_offsets,19], [__consumer_offsets,43], [__consumer_offsets,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:12:00,898] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:12:01,020] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:12:01,025] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([othertopic,0], [othertopic,2], [topic2,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:12:01,027] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-17 18:17:00,299] TRACE [Controller 2]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-17 18:17:00,323] DEBUG [Controller 2]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [topic3,2] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [topic3,1] -> List(1), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [topic2,0] -> List(1, 0, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [topic2,2] -> List(0, 2, 1), [mytopic,0] -> List(0), [topic4,0] -> List(0, 1), [topic3,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-17 18:17:00,324] DEBUG [Controller 2]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [topic2,1] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-17 18:17:00,324] TRACE [Controller 2]: leader imbalance ratio for broker 2 is 0.896552 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,324] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,19] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,324] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,331] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,19] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,332] WARN [Controller 2]: Partition [__consumer_offsets,19] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,332] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,47] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,332] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,333] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,47] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,334] WARN [Controller 2]: Partition [__consumer_offsets,47] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,334] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,29] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,334] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,335] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,29] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,335] WARN [Controller 2]: Partition [__consumer_offsets,29] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,335] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,41] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,335] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,336] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,41] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,337] WARN [Controller 2]: Partition [__consumer_offsets,41] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,337] INFO [Controller 2]: Starting preferred replica leader election for partitions [topic2,1] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,337] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic2,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,338] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [topic2,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,338] WARN [Controller 2]: Partition [topic2,1] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,339] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,39] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,339] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,340] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,39] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,340] WARN [Controller 2]: Partition [__consumer_offsets,39] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,340] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,17] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,340] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,341] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,17] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,342] WARN [Controller 2]: Partition [__consumer_offsets,17] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,342] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,33] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,342] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,343] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,33] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,343] WARN [Controller 2]: Partition [__consumer_offsets,33] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,343] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,3] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,343] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,345] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,3] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,345] WARN [Controller 2]: Partition [__consumer_offsets,3] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,345] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,21] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,345] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,346] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,21] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,347] WARN [Controller 2]: Partition [__consumer_offsets,21] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,347] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,5] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,347] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,348] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,5] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,348] WARN [Controller 2]: Partition [__consumer_offsets,5] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,348] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,15] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,348] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,349] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,15] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,350] WARN [Controller 2]: Partition [__consumer_offsets,15] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,350] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,23] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,350] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,351] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,23] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,351] WARN [Controller 2]: Partition [__consumer_offsets,23] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,351] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,11] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,351] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,352] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,11] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,353] WARN [Controller 2]: Partition [__consumer_offsets,11] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,353] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,13] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,353] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,354] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,13] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,354] WARN [Controller 2]: Partition [__consumer_offsets,13] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,354] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,49] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,354] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,355] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,49] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,356] WARN [Controller 2]: Partition [__consumer_offsets,49] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,356] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,37] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,356] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,357] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,37] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,357] WARN [Controller 2]: Partition [__consumer_offsets,37] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,357] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,31] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,357] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,358] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,31] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,359] WARN [Controller 2]: Partition [__consumer_offsets,31] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,359] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,25] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,359] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,360] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,25] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,360] WARN [Controller 2]: Partition [__consumer_offsets,25] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,360] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,45] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,361] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,362] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,45] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,363] WARN [Controller 2]: Partition [__consumer_offsets,45] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,363] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,27] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,363] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,364] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,27] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,365] WARN [Controller 2]: Partition [__consumer_offsets,27] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,365] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,43] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,365] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,366] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,43] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,367] WARN [Controller 2]: Partition [__consumer_offsets,43] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,367] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,35] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,367] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,368] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,35] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,368] WARN [Controller 2]: Partition [__consumer_offsets,35] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,368] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,7] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,368] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,369] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,7] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,370] WARN [Controller 2]: Partition [__consumer_offsets,7] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,370] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,9] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,370] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,371] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,9] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,371] WARN [Controller 2]: Partition [__consumer_offsets,9] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,371] INFO [Controller 2]: Starting preferred replica leader election for partitions [__consumer_offsets,1] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,371] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,372] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,372] WARN [Controller 2]: Partition [__consumer_offsets,1] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,373] DEBUG [Controller 2]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-17 18:17:00,373] TRACE [Controller 2]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,373] DEBUG [Controller 2]: topics not in preferred replica Map([othertopic,2] -> List(0, 1, 2), [topic4,0] -> List(0, 1)) (kafka.controller.KafkaController)
[2016-11-17 18:17:00,373] TRACE [Controller 2]: leader imbalance ratio for broker 0 is 0.400000 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,373] INFO [Controller 2]: Starting preferred replica leader election for partitions [othertopic,2] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,373] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,374] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [othertopic,2] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,374] WARN [Controller 2]: Partition [othertopic,2] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:17:00,374] INFO [Controller 2]: Starting preferred replica leader election for partitions [topic4,0] (kafka.controller.KafkaController)
[2016-11-17 18:17:00,374] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic4,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:17:00,375] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [topic4,0] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-17 18:17:00,376] WARN [Controller 2]: Partition [topic4,0] failed to complete preferred replica leader election. Leader is 1 (kafka.controller.KafkaController)
[2016-11-17 18:19:19,934] INFO [Controller 2]: Shutting down broker 2 (kafka.controller.KafkaController)
[2016-11-17 18:19:19,935] DEBUG [Controller 2]: All shutting down brokers: 2 (kafka.controller.KafkaController)
[2016-11-17 18:19:19,936] DEBUG [Controller 2]: Live brokers: 0,1 (kafka.controller.KafkaController)
[2016-11-17 18:19:19,944] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,945] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,946] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:19,948] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-17 18:19:19,952] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,40] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:19,973] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,974] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,974] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,974] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,974] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:19,974] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-17 18:19:19,977] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,39] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:19,994] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,994] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,994] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,994] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic2,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:19,994] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:19,994] DEBUG [Controller 2]: Removing replica 2 from ISR 0,1,2 for partition [topic2,2]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,074] INFO [Controller 2]: New leader and ISR for partition [topic2,2] is {"leader":0,"leader_epoch":9,"isr":[0,1]} (kafka.controller.KafkaController)
[2016-11-17 18:19:20,075] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,364] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic2,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,365] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,365] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic2,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,365] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,365] DEBUG [Controller 2]: Removing replica 2 from ISR 0,1 for partition [topic2,1]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,370] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [topic2,1] since it is not in the ISR. Leader = 1 ; ISR = List(0, 1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,385] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,385] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic2,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,385] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,385] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,385] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,385] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,390] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,32] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,390] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,391] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,391] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,391] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,391] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,391] DEBUG [Controller 2]: Removing replica 2 from ISR 1,2 for partition [othertopic,2]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,407] INFO [Controller 2]: New leader and ISR for partition [othertopic,2] is {"leader":1,"leader_epoch":50,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-17 18:19:20,408] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,409] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,409] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,409] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=13,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,409] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=13,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,409] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,428] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,13] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,500] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,500] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=13,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,501] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,501] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,501] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,501] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,504] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,21] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,505] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,505] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,505] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,505] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,505] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,505] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,508] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,12] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,592] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,592] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,593] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,593] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=7,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,593] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=7,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,593] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,622] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,7] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,623] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,623] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=7,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,623] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,623] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,623] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,623] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,626] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,18] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,664] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,664] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,665] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,665] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,665] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,665] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,672] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,24] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,673] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,673] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,673] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,673] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,673] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,674] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,685] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,26] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,685] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,686] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,686] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,686] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=19,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,686] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=19,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,686] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,693] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,19] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,694] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,694] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=19,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,694] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,694] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,694] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,694] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,697] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,22] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,698] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,698] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,698] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,698] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,698] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,698] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,706] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,36] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,709] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,709] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,709] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,709] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=49,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,709] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=49,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,709] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,716] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,49] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,717] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,717] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=49,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,717] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,717] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,718] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,718] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,749] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,27] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,751] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,751] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,751] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,751] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,751] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,751] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,765] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,11] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,768] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,768] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,769] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,769] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,770] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,770] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,773] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,46] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,774] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,774] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,774] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,774] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=31,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,774] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=31,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,774] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,776] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,31] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,777] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,777] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=31,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,778] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,778] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,778] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,778] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,780] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,2] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,781] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,781] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,781] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,784] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,1] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-17 18:19:20,788] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:56,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:59), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,1,LeaderEpoch:9,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,791] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,791] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,791] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,791] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,792] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,45] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,793] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,793] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,793] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,793] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,793] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,793] DEBUG [Controller 2]: Removing replica 2 from ISR 1,0 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,795] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [othertopic,0] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,795] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,795] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,795] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,795] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,795] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,795] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,796] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,42] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,797] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,797] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,797] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,797] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,797] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,797] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,798] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,4] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,798] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,798] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,798] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,798] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,799] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,799] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,800] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,41] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,800] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,800] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,800] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,800] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,800] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,800] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,801] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,6] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,801] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,801] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,801] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,801] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,801] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,802] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,803] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,44] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,803] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,803] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,803] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,804] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=37,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,804] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=37,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,804] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,806] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,37] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,809] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,810] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=37,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,810] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,811] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,812] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=1,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,813] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,826] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,1] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,829] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,829] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=1,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,829] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,829] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,830] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,830] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,832] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,47] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,832] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,833] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,833] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,833] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,833] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,833] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,835] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,17] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,835] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,835] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,836] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,836] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,836] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,836] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,838] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,14] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,838] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,838] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,838] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,838] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,839] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,839] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,840] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,5] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,841] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,841] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,841] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,841] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,841] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,841] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,843] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,29] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,844] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,844] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,845] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,845] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,845] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,845] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,846] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,9] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,847] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,847] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,847] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,847] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,848] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,848] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,849] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,48] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,850] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,850] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,850] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,850] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,850] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,851] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,852] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,23] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,853] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,853] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,853] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,853] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,853] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,853] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,854] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,20] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,855] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,855] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,856] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,856] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=25,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,856] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,856] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,857] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,25] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,858] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,858] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=25,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,858] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,858] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,859] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,859] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,860] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,16] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,861] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,861] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,862] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,862] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,862] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,862] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,863] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,35] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,864] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,864] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,865] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,865] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,865] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,865] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,866] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,34] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,868] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,868] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,868] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,868] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic2,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,868] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,868] DEBUG [Controller 2]: Removing replica 2 from ISR 1,2 for partition [topic2,0]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,887] INFO [Controller 2]: New leader and ISR for partition [topic2,0] is {"leader":1,"leader_epoch":16,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-17 18:19:20,888] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,888] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=topic2,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,888] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,888] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,889] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,889] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,891] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,15] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,892] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,892] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,892] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,892] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,892] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,893] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,894] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,10] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,894] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,894] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,895] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,895] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,895] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,895] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,896] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,3] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,897] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,897] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,897] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,897] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,897] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,897] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,898] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,28] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,899] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,899] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,900] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,900] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,900] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,900] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,901] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,30] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,902] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,902] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,902] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,902] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=43,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,902] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=43,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,902] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,903] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,43] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,904] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,904] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=43,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,904] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,904] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,905] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,905] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,906] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,0] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,906] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,906] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,907] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,907] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,907] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,907] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,908] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,38] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,909] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,909] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,909] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,909] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,909] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,909] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,910] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,33] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,911] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,911] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,911] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,911] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,911] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,911] DEBUG [Controller 2]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,912] WARN [Controller 2]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,8] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,913] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,913] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,915] TRACE [Controller 2]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic2,1] -> (Leader:1,ISR:0,1,LeaderEpoch:18,ControllerEpoch:60),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:50,ControllerEpoch:60),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:56,ControllerEpoch:60),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:60),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic2,2] -> (Leader:0,ISR:0,1,LeaderEpoch:9,ControllerEpoch:60),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59),[topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60) (kafka.controller.KafkaController)
[2016-11-17 18:19:20,916] INFO [Controller 2]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-17 18:19:20,916] DEBUG [Controller 2]: All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2016-11-17 18:19:20,916] DEBUG [Controller 2]: Live brokers: 0 (kafka.controller.KafkaController)
[2016-11-17 18:19:20,917] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,919] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,921] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,921] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=topic2,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,921] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=2,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,921] DEBUG [Controller 2]: Removing replica 1 from ISR 0,1 for partition [topic2,2]. (kafka.controller.KafkaController)
[2016-11-17 18:19:20,924] INFO [Controller 2]: New leader and ISR for partition [topic2,2] is {"leader":0,"leader_epoch":10,"isr":[0]} (kafka.controller.KafkaController)
[2016-11-17 18:19:20,925] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,925] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=topic2,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,925] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic2,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,929] WARN [Controller-2-to-broker-2-send-thread], Controller 2 epoch 60 fails to send request {controller_id=2,controller_epoch=60,delete_partitions=0,partitions=[{topic=topic2,partition=0}]} to broker Node(2, 172.16.26.72, 9094). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:20,928] DEBUG [ControlledShutdownLeaderSelector]: Partition [topic2,1] : current leader = 1, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-17 18:19:20,933] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,1,LeaderEpoch:56,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:60), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,934] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,936] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,938] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,940] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,941] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,943] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,944] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,946] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,948] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,949] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,950] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,952] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,953] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,955] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,958] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,959] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,960] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,962] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:20,999] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,999] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=othertopic,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:20,999] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:20,999] DEBUG [Controller 2]: Removing replica 1 from ISR 0,1 for partition [othertopic,1]. (kafka.controller.KafkaController)
[2016-11-17 18:19:21,001] INFO [Controller 2]: New leader and ISR for partition [othertopic,1] is {"leader":0,"leader_epoch":57,"isr":[0]} (kafka.controller.KafkaController)
[2016-11-17 18:19:21,002] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,002] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=othertopic,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,002] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,005] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,006] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,0] : current leader = 1, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-17 18:19:21,008] DEBUG [Partition state machine on Controller 2]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,1] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:60), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,0] -> (Leader:0,ISR:0,LeaderEpoch:51,ControllerEpoch:60), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [othertopic,1] -> (Leader:0,ISR:0,LeaderEpoch:57,ControllerEpoch:60), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:60), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:60), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60), [topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59), [topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60)) (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,008] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,010] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,012] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,014] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,016] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,017] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,018] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,020] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,022] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,023] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,024] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,026] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,028] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,030] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,031] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,033] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,034] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,036] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,038] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,040] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,041] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic2,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,043] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,044] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,046] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,047] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,049] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,050] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,052] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,053] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,055] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,056] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,058] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic4,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,060] TRACE [Controller 2]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic2,1] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:60),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[othertopic,0] -> (Leader:0,ISR:0,LeaderEpoch:51,ControllerEpoch:60),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[othertopic,1] -> (Leader:0,ISR:0,LeaderEpoch:57,ControllerEpoch:60),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:60),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:60),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59),[topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:59),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60) (kafka.controller.KafkaController)
[2016-11-17 18:19:21,060] INFO [Controller 2]: Shutting down broker 0 (kafka.controller.KafkaController)
[2016-11-17 18:19:21,060] DEBUG [Controller 2]: All shutting down brokers: 0,1,2 (kafka.controller.KafkaController)
[2016-11-17 18:19:21,060] DEBUG [Controller 2]: Live brokers:  (kafka.controller.KafkaController)
[2016-11-17 18:19:21,061] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic2,2] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,062] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [topic2,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,063] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,063] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=2,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,063] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=2,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:21,063] DEBUG [Controller 2]: Removing replica 0 from ISR 1 for partition [othertopic,2]. (kafka.controller.KafkaController)
[2016-11-17 18:19:21,064] WARN [Controller 2]: Cannot remove replica 0 from ISR of partition [othertopic,2] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:21,065] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,065] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=2,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,065] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,067] INFO [Partition state machine on Controller 2]: Invoking state change to OnlinePartition for partitions [othertopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:21,068] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,069] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,069] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:21,069] DEBUG [Controller 2]: Removing replica 0 from ISR 1 for partition [topic2,0]. (kafka.controller.KafkaController)
[2016-11-17 18:19:21,070] WARN [Controller 2]: Cannot remove replica 0 from ISR of partition [topic2,0] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:21,070] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,070] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic2,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,070] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,070] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,070] INFO [Replica state machine on controller 2]: Invoking state change to OfflineReplica for replicas [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:21,070] DEBUG [Controller 2]: Removing replica 0 from ISR 1 for partition [topic4,0]. (kafka.controller.KafkaController)
[2016-11-17 18:19:21,072] WARN [Controller 2]: Cannot remove replica 0 from ISR of partition [topic4,0] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-17 18:19:21,072] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,072] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=topic4,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-17 18:19:21,073] TRACE [Controller 2]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic2,1] -> (Leader:0,ISR:0,LeaderEpoch:19,ControllerEpoch:60),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic3,1] -> (Leader:1,ISR:1,LeaderEpoch:7,ControllerEpoch:58),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[othertopic,0] -> (Leader:0,ISR:0,LeaderEpoch:51,ControllerEpoch:60),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[othertopic,1] -> (Leader:0,ISR:0,LeaderEpoch:57,ControllerEpoch:60),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[topic2,0] -> (Leader:1,ISR:1,LeaderEpoch:16,ControllerEpoch:60),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:22,ControllerEpoch:60),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[topic3,2] -> (Leader:2,ISR:2,LeaderEpoch:6,ControllerEpoch:60),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[topic2,2] -> (Leader:0,ISR:0,LeaderEpoch:10,ControllerEpoch:60),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:34,ControllerEpoch:60),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[othertopic,2] -> (Leader:1,ISR:1,LeaderEpoch:50,ControllerEpoch:60),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:38,ControllerEpoch:59),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:37,ControllerEpoch:60),[topic3,0] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:59),[topic4,0] -> (Leader:1,ISR:1,LeaderEpoch:4,ControllerEpoch:60),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:36,ControllerEpoch:60),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:35,ControllerEpoch:60) (kafka.controller.KafkaController)
[2016-11-17 18:19:21,235] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:21,538] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:21,843] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:22,149] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:22,454] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:22,755] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:23,058] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:23,363] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:23,667] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:23,968] WARN [Controller-2-to-broker-2-send-thread], Controller 2's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-17 18:19:23,984] DEBUG [Controller 2]: Controller resigning, broker id 2 (kafka.controller.KafkaController)
[2016-11-17 18:19:23,985] DEBUG [Controller 2]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-17 18:19:23,985] INFO [Partition state machine on Controller 2]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:23,985] INFO [Replica state machine on controller 2]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:23,986] INFO [Controller-2-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,986] INFO [Controller-2-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,986] INFO [Controller-2-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,987] INFO [Controller-2-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,987] INFO [Controller-2-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,987] INFO [Controller-2-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,988] INFO [Controller-2-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,988] INFO [Controller-2-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,989] INFO [Controller-2-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-17 18:19:23,989] INFO [Controller 2]: Broker 2 resigned as the controller (kafka.controller.KafkaController)
[2016-11-17 18:19:37,960] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-11-17 18:19:37,960] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-17 18:19:37,960] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-17 18:19:37,960] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-17 18:19:37,960] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
