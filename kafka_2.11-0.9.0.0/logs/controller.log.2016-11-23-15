[2016-11-23 16:02:28,850] INFO [Controller 1]: Broker 1 starting become controller state transition (kafka.controller.KafkaController)
[2016-11-23 16:02:28,853] INFO [Controller 1]: Initialized controller epoch to 6 and zk version 5 (kafka.controller.KafkaController)
[2016-11-23 16:02:28,855] INFO [Controller 1]: Controller 1 incremented epoch to 7 (kafka.controller.KafkaController)
[2016-11-23 16:02:28,856] DEBUG [Controller 1]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-23 16:02:29,060] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:29,064] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:29,067] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-23 16:02:29,067] INFO [Controller-1-to-broker-1-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-23 16:02:29,069] INFO [Controller 1]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-11-23 16:02:29,070] INFO [Controller 1]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-11-23 16:02:29,070] INFO [Controller 1]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-11-23 16:02:29,073] INFO [Controller 1]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-11-23 16:02:29,073] INFO [Controller 1]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-11-23 16:02:29,074] INFO [Controller 1]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-11-23 16:02:29,078] INFO [Controller 1]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-11-23 16:02:29,079] INFO [Controller 1]: List of topics ineligible for deletion: __consumer_offsets (kafka.controller.KafkaController)
[2016-11-23 16:02:29,082] INFO [Controller 1]: Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2016-11-23 16:02:29,082] INFO [Controller 1]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-11-23 16:02:29,083] INFO [Controller 1]: Current list of topics in the cluster: Set(test2, __consumer_offsets) (kafka.controller.KafkaController)
[2016-11-23 16:02:29,092] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=1],[Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=1],[Topic=__consumer_offsets,Partition=5,Replica=1],[Topic=__consumer_offsets,Partition=21,Replica=1],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=1],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=1],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=1],[Topic=__consumer_offsets,Partition=10,Replica=1],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=test2,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=1],[Topic=__consumer_offsets,Partition=40,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=1],[Topic=__consumer_offsets,Partition=6,Replica=1],[Topic=__consumer_offsets,Partition=1,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=1],[Topic=__consumer_offsets,Partition=42,Replica=1],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=1],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=1],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=1],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=1],[Topic=test2,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=1],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=1],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=1],[Topic=__consumer_offsets,Partition=20,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=1],[Topic=test2,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=1],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=1],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=1],[Topic=__consumer_offsets,Partition=34,Replica=1],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=1],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=1],[Topic=__consumer_offsets,Partition=44,Replica=1],[Topic=__consumer_offsets,Partition=32,Replica=1],[Topic=test2,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=1],[Topic=__consumer_offsets,Partition=11,Replica=1],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=1],[Topic=__consumer_offsets,Partition=12,Replica=1],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=1],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=1],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=17,Replica=1],[Topic=__consumer_offsets,Partition=24,Replica=1],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:29,121] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, localhost, 9011) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 16:02:29,121] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, localhost, 9010) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-23 16:02:29,139] INFO [Replica state machine on controller 1]: Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=45,Replica=2] -> OnlineReplica, [Topic=test2,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=33,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=12,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=45,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=22,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=38,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=43,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=48,Replica=0] -> ReplicaDeletionIneligible, [Topic=test2,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=36,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=29,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=40,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=16,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> ReplicaDeletionIneligible, [Topic=test2,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=37,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=10,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=7,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=0,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> ReplicaDeletionIneligible, [Topic=test2,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> ReplicaDeletionIneligible, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:29,145] INFO [Partition state machine on Controller 1]: Started partition state machine with initial state -> Map([__consumer_offsets,19] -> OnlinePartition, [__consumer_offsets,30] -> OnlinePartition, [__consumer_offsets,47] -> OnlinePartition, [__consumer_offsets,29] -> OnlinePartition, [__consumer_offsets,41] -> OnlinePartition, [__consumer_offsets,39] -> OnlinePartition, [__consumer_offsets,10] -> OnlinePartition, [__consumer_offsets,17] -> OnlinePartition, [__consumer_offsets,14] -> OnlinePartition, [__consumer_offsets,40] -> OnlinePartition, [__consumer_offsets,18] -> OnlinePartition, [__consumer_offsets,26] -> OnlinePartition, [__consumer_offsets,0] -> OnlinePartition, [__consumer_offsets,24] -> OnlinePartition, [__consumer_offsets,33] -> OnlinePartition, [__consumer_offsets,20] -> OnlinePartition, [__consumer_offsets,21] -> OnlinePartition, [__consumer_offsets,3] -> OnlinePartition, [__consumer_offsets,22] -> OnlinePartition, [__consumer_offsets,5] -> OnlinePartition, [__consumer_offsets,12] -> OnlinePartition, [__consumer_offsets,8] -> OnlinePartition, [__consumer_offsets,23] -> OnlinePartition, [__consumer_offsets,15] -> OnlinePartition, [__consumer_offsets,11] -> OnlinePartition, [__consumer_offsets,48] -> OnlinePartition, [__consumer_offsets,13] -> OnlinePartition, [__consumer_offsets,49] -> OnlinePartition, [__consumer_offsets,6] -> OnlinePartition, [__consumer_offsets,28] -> OnlinePartition, [__consumer_offsets,4] -> OnlinePartition, [__consumer_offsets,37] -> OnlinePartition, [__consumer_offsets,31] -> OnlinePartition, [__consumer_offsets,44] -> OnlinePartition, [__consumer_offsets,42] -> OnlinePartition, [__consumer_offsets,34] -> OnlinePartition, [test2,1] -> OnlinePartition, [__consumer_offsets,46] -> OnlinePartition, [test2,0] -> OnlinePartition, [__consumer_offsets,25] -> OnlinePartition, [__consumer_offsets,45] -> OnlinePartition, [__consumer_offsets,27] -> OnlinePartition, [__consumer_offsets,32] -> OnlinePartition, [__consumer_offsets,43] -> OnlinePartition, [__consumer_offsets,36] -> OnlinePartition, [__consumer_offsets,35] -> OnlinePartition, [__consumer_offsets,7] -> OnlinePartition, [__consumer_offsets,9] -> OnlinePartition, [__consumer_offsets,38] -> OnlinePartition, [__consumer_offsets,1] -> OnlinePartition, [__consumer_offsets,2] -> OnlinePartition, [__consumer_offsets,16] -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:29,149] INFO [Controller 1]: Broker 1 is ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2016-11-23 16:02:29,150] INFO [Controller 1]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-11-23 16:02:29,151] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:29,185] INFO [Controller 1]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-11-23 16:02:29,187] INFO [delete-topics-thread-1], Starting  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2016-11-23 16:02:29,189] DEBUG [Topic Deletion Manager 1], Waiting for signal to start or continue topic deletion (kafka.controller.TopicDeletionManager)
[2016-11-23 16:02:32,560] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-23 16:02:32,561] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2016-11-23 16:02:32,562] DEBUG [Controller 1]: Live brokers: 2 (kafka.controller.KafkaController)
[2016-11-23 16:02:32,572] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,572] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,573] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,574] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,577] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,43] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,579] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=43,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,581] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,581] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,582] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,591] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,14] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,605] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,607] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,615] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,620] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,620] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=36,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,620] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=36,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,620] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,624] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,36] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,625] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=36,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,625] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,625] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=36,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,625] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,625] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=6,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,626] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=6,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,626] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,633] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,6] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,633] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=6,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,634] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,634] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=6,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,634] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,634] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,634] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,634] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,637] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,39] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,638] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=39,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,638] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,638] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,638] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,642] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,23] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,643] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,644] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,644] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,644] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,645] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,655] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,24] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,656] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=24,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,656] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,656] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,656] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,665] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,38] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,669] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,671] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,676] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,676] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,676] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,676] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,688] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,3] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,689] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=3,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,689] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,689] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,690] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,690] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,690] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,691] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,693] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,21] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,694] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=21,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,694] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,695] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,695] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,697] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,700] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,702] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,702] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,702] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,702] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,705] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,25] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,707] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=25,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,713] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,713] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,713] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,713] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,713] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,713] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,725] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,27] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,725] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=27,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,728] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,728] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,730] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,730] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=42,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,731] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=42,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,731] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,738] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,42] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,738] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=42,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=16,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,739] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,740] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=42,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,740] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,742] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,11] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,744] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,751] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,751] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,751] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,751] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,754] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,7] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,754] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=7,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,755] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,755] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,755] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,757] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,47] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,759] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,759] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,759] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,760] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,760] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,765] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,9] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,766] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=9,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,767] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,767] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,767] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,767] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,767] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,767] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,769] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,13] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,770] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=13,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,770] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,770] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,770] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,774] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,29] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,776] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,777] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,780] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,8] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,782] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:1,ISR:1,2,LeaderEpoch:15,ControllerEpoch:4), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,783] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,786] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [test2,1] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,789] DEBUG [ControlledShutdownLeaderSelector]: Partition [test2,1] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,791] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,791] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,792] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,792] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,792] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,794] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,31] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,795] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=31,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,796] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,796] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,796] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,796] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=18,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,796] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=18,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,796] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,800] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,18] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,801] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=18,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=17,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,802] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,802] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=18,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,802] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,805] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,20] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,808] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,12] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,809] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,809] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,809] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,809] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,821] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,37] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,824] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=37,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=15,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,827] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,827] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,830] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,830] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,830] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,830] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,833] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,49] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,833] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=49,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,841] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,841] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,842] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,842] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=12,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,842] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=12,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,842] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,851] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,12] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,852] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=12,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=17,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,852] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,852] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=12,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,852] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,855] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,5] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,856] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,857] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,863] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,32] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,867] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,867] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,872] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,2] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,889] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,890] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,890] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,890] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,891] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,903] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,1] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:32,904] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=1,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,907] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,907] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,907] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,907] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,907] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,907] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,912] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,0] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,912] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=0,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,913] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,913] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,913] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,913] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,913] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,913] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,916] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,15] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,916] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=15,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,917] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,917] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,917] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,919] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,44] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,920] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,921] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,925] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,17] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,929] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:4), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,935] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,935] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=48,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,935] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=48,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,935] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,940] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,48] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,940] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=48,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=17,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,940] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,940] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=48,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,940] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [test2,0] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,951] DEBUG [ControlledShutdownLeaderSelector]: Partition [test2,0] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,959] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,959] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,965] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,26] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,968] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,969] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,969] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,969] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,969] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,973] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,33] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,974] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=33,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=17,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,974] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,974] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,974] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,980] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,41] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,982] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,0,LeaderEpoch:4,ControllerEpoch:6), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,0,LeaderEpoch:3,ControllerEpoch:6), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,988] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,988] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,988] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:32,988] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-23 16:02:32,992] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,45] is {"leader":2,"leader_epoch":5,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:32,992] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=45,controller_epoch=7,leader=2,leader_epoch=5,isr=[2,0],zk_version=14,replicas=[2,0,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:32,993] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,993] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:32,993] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,996] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,35] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:32,998] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,30] -> (Leader:2,ISR:2,1,0,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:32,998] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,004] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,004] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,004] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,004] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,006] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,19] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,007] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=19,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,007] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,007] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,007] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,008] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=30,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,008] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=30,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,009] DEBUG [Controller 1]: Removing replica 1 from ISR 2,1,0 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,017] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,30] is {"leader":2,"leader_epoch":6,"isr":[2,0]} (kafka.controller.KafkaController)
[2016-11-23 16:02:33,018] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=30,controller_epoch=7,leader=2,leader_epoch=6,isr=[2,0],zk_version=19,replicas=[2,1,0]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,018] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,018] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=30,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,021] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,14] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6),[__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,318] INFO [Controller 1]: Shutting down broker 2 (kafka.controller.KafkaController)
[2016-11-23 16:02:33,318] DEBUG [Controller 1]: All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2016-11-23 16:02:33,318] DEBUG [Controller 1]: Live brokers:  (kafka.controller.KafkaController)
[2016-11-23 16:02:33,318] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,322] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,324] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,14] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,326] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,328] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,328] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,328] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,329] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,332] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,28] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,333] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=28,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,333] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,333] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,333] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,333] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,333] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,333] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,336] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,4] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,337] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=4,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,337] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,337] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,337] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,340] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,36] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,341] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,342] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,345] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,6] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,348] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,349] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,353] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,39] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,354] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,362] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,365] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,23] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,368] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,369] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,371] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,24] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,374] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,375] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,379] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,38] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,382] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,383] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,383] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,383] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,384] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,386] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,16] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,387] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=16,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,387] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,387] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,387] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,390] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,3] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,392] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,392] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,395] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,21] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,396] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,397] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,397] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,398] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,398] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,401] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,10] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,402] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=10,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,402] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,403] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,403] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,403] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,403] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,403] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,406] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,40] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,406] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=40,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=15,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,406] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,407] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,407] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,407] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,407] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,407] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,409] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,34] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,410] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=34,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,411] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,411] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,411] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,417] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,420] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,27] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,425] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,426] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,429] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,42] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,431] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,432] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,439] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,11] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,444] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,451] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,455] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,457] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,47] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,461] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,479] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,489] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,9] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,493] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,500] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,503] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,505] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,29] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,508] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,513] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,516] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,8] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,518] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,519] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,519] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,519] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,519] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,539] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,22] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,539] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=22,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,539] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,539] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,540] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [test2,1] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,549] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,553] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,555] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,18] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,557] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,558] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,579] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,20] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,591] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,592] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,601] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,604] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,609] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,12] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,611] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,611] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,618] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,5] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,620] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,621] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,627] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,32] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,630] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,631] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,638] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,2] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,640] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,642] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,649] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,652] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,0] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,655] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,655] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,662] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,15] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,665] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,670] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,672] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,44] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,676] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,680] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,683] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,17] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,685] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,689] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,692] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,48] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,694] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,694] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [test2,0] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,702] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,705] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,26] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,708] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,711] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,714] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,33] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,716] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,716] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,722] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,41] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,724] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:2,ISR:2,0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,724] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,731] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,45] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,738] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:2,ISR:2,0,LeaderEpoch:4,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,740] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,745] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,35] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,747] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:2,ISR:2,0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:6), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,748] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,748] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,748] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:33,749] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-23 16:02:33,751] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,46] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:33,752] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=46,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=15,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:33,753] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,753] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:33,753] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,756] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,758] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,30] : current leader = 2, new leader = 0 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-23 16:02:33,760] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:7), [__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7), [test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7), [__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7)) (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:33,765] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:7),[__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7) (kafka.controller.KafkaController)
[2016-11-23 16:02:34,189] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-23 16:02:34,193] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [test2,1] -> List(2, 1), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)), 1 -> Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,0] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)), 0 -> Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2))) (kafka.controller.KafkaController)
[2016-11-23 16:02:34,195] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,30] -> List(2, 1, 0), [__consumer_offsets,39] -> List(2, 0, 1), [__consumer_offsets,18] -> List(2, 1, 0), [__consumer_offsets,0] -> List(2, 1, 0), [__consumer_offsets,24] -> List(2, 1, 0), [__consumer_offsets,33] -> List(2, 0, 1), [__consumer_offsets,3] -> List(2, 0, 1), [__consumer_offsets,21] -> List(2, 0, 1), [__consumer_offsets,12] -> List(2, 1, 0), [__consumer_offsets,15] -> List(2, 0, 1), [__consumer_offsets,48] -> List(2, 1, 0), [__consumer_offsets,6] -> List(2, 1, 0), [__consumer_offsets,42] -> List(2, 1, 0), [__consumer_offsets,45] -> List(2, 0, 1), [__consumer_offsets,27] -> List(2, 0, 1), [__consumer_offsets,36] -> List(2, 1, 0), [__consumer_offsets,9] -> List(2, 0, 1)) (kafka.controller.KafkaController)
[2016-11-23 16:02:34,196] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.944444 (kafka.controller.KafkaController)
[2016-11-23 16:02:34,197] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,47] -> List(1, 2, 0), [__consumer_offsets,29] -> List(1, 2, 0), [__consumer_offsets,41] -> List(1, 2, 0), [__consumer_offsets,17] -> List(1, 2, 0), [__consumer_offsets,14] -> List(1, 0, 2), [__consumer_offsets,26] -> List(1, 0, 2), [__consumer_offsets,20] -> List(1, 0, 2), [__consumer_offsets,5] -> List(1, 2, 0), [__consumer_offsets,8] -> List(1, 0, 2), [__consumer_offsets,23] -> List(1, 2, 0), [__consumer_offsets,11] -> List(1, 2, 0), [__consumer_offsets,44] -> List(1, 0, 2), [test2,0] -> List(1, 2), [__consumer_offsets,32] -> List(1, 0, 2), [__consumer_offsets,35] -> List(1, 2, 0), [__consumer_offsets,38] -> List(1, 0, 2), [__consumer_offsets,2] -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2016-11-23 16:02:34,198] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 16:02:34,198] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(0, 2, 1), [__consumer_offsets,10] -> List(0, 1, 2), [__consumer_offsets,40] -> List(0, 1, 2), [__consumer_offsets,22] -> List(0, 1, 2), [__consumer_offsets,13] -> List(0, 2, 1), [__consumer_offsets,49] -> List(0, 2, 1), [__consumer_offsets,28] -> List(0, 1, 2), [__consumer_offsets,4] -> List(0, 1, 2), [__consumer_offsets,37] -> List(0, 2, 1), [__consumer_offsets,31] -> List(0, 2, 1), [__consumer_offsets,34] -> List(0, 1, 2), [__consumer_offsets,46] -> List(0, 1, 2), [__consumer_offsets,25] -> List(0, 2, 1), [__consumer_offsets,43] -> List(0, 2, 1), [__consumer_offsets,7] -> List(0, 2, 1), [__consumer_offsets,1] -> List(0, 2, 1), [__consumer_offsets,16] -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2016-11-23 16:02:34,198] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 1.000000 (kafka.controller.KafkaController)
[2016-11-23 16:02:38,035] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-23 16:02:38,035] DEBUG [Controller 1]: All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2016-11-23 16:02:38,035] DEBUG [Controller 1]: Live brokers:  (kafka.controller.KafkaController)
[2016-11-23 16:02:38,035] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,035] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,036] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,036] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,038] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,43] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,038] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=43,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,039] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,039] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,039] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,039] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=14,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,039] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=14,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,039] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,042] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,14] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,042] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=14,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=17,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,042] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,043] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=14,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,043] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,050] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,052] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,052] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=36,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,052] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=36,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,052] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,054] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,36] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,054] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=36,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,055] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,055] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=36,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,055] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,055] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=6,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,055] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=6,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,055] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,058] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,6] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,059] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=6,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,059] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,059] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=6,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,059] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,059] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,059] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,059] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,062] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,39] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,063] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=39,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,063] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,063] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,063] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,063] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,063] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,063] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,067] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,23] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,067] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=23,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,068] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,068] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,069] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,069] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,069] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,069] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,071] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,24] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,072] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=24,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,072] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,072] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=24,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,072] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,072] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=38,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,072] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=38,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,072] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,076] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,38] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,077] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=38,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,077] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,077] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=38,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,077] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,087] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,087] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,088] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,088] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,091] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,3] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,092] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=3,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,092] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,092] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,092] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,092] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,092] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,092] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,097] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,21] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,098] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=21,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,099] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,099] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,099] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,106] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,108] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,110] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,110] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,110] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,111] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,113] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,25] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,113] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=25,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,114] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,114] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,115] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,115] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,116] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,116] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,120] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,27] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,121] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=27,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,122] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,122] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,124] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,124] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=42,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,127] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=42,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,127] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,130] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,42] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,134] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=42,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=17,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,135] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,135] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=42,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,136] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,136] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,142] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,142] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,145] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,11] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,153] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=11,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,157] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,157] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,159] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,159] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,159] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,159] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,161] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,7] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,161] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=7,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,162] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,163] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,163] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,163] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,165] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,165] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,168] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,47] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,170] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=47,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,170] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,170] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,171] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,171] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,171] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,172] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,174] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,9] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,175] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=9,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,175] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,175] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,175] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,176] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,176] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,176] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,179] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,13] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,180] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=13,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,182] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,182] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,182] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,182] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,182] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,182] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,187] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,29] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,191] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=29,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,191] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,191] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,192] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,194] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=8,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,195] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=8,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,195] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,211] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,8] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,212] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=8,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,216] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,217] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=8,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,217] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,220] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,220] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=test2,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,220] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=test2,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,220] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [test2,1]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,222] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [test2,1] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,223] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,223] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=test2,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,223] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,223] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,223] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,223] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,226] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,31] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,227] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=31,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,228] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,228] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,228] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,228] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=18,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,228] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=18,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,229] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,231] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,18] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,232] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=18,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,232] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,232] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=18,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,232] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,232] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=20,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,232] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=20,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,232] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,238] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,20] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,239] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=20,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,239] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,239] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=20,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,239] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,239] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,239] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,239] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,248] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,37] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,248] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=37,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=15,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,249] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,249] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,249] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,249] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,249] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,249] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,262] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,49] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,264] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=49,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,265] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,265] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,266] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,266] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=12,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,266] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=12,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,267] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,270] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,12] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,271] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=12,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,271] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,271] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=12,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,277] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,277] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,277] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,277] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,281] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,5] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,281] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=5,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,281] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,281] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,281] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,281] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=32,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,282] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=32,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,282] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,287] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,32] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,288] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=32,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,288] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,289] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=32,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,290] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,290] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,290] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=2,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,290] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,293] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,2] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,293] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=2,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,294] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,294] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=2,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,294] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,294] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,294] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,294] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,298] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,1] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,299] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=1,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,300] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,300] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,300] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,300] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,300] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,301] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,303] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,0] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,303] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=0,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,304] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,304] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,304] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,304] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,304] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,304] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,309] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,15] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,309] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=15,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,310] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,311] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,311] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,311] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=44,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,311] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=44,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,311] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,321] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,44] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,321] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=44,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,321] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,322] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=44,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,322] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,322] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,322] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,322] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,326] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,17] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,327] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=17,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,327] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,327] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,327] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,327] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=48,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,327] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=48,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,328] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,335] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,48] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,336] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=48,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,336] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,336] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=48,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,337] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,337] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=test2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,337] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=test2,Partition=0,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,337] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [test2,0]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,341] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [test2,0] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,342] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,342] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=test2,Partition=0,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,342] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,342] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=26,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,342] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=26,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,342] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,346] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,26] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,346] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=26,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,352] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,352] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=26,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,352] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,352] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,352] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,352] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,358] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,33] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,358] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=33,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,359] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,359] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,359] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,359] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,359] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,359] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,368] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,41] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,369] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=41,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,369] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,369] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,369] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,369] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,369] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,369] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,375] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,45] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,375] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=45,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,389] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,390] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,390] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,390] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,390] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,390] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,393] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,35] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,394] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=35,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,394] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,394] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,394] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,402] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,402] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,402] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,402] DEBUG [Controller 1]: Removing replica 1 from ISR 2 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,405] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,19] since it is not in the ISR. Leader = 2 ; ISR = List(2) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,406] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=19,controller_epoch=7,leader=2,leader_epoch=5,isr=[2],zk_version=14,replicas=[0,2,1]}],live_leaders=[{id=2,host=localhost,port=9011}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,406] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,406] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,406] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,406] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=30,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,409] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=30,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,409] DEBUG [Controller 1]: Removing replica 1 from ISR 0 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,411] WARN [Controller 1]: Cannot remove replica 1 from ISR of partition [__consumer_offsets,30] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,412] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=30,controller_epoch=7,leader=0,leader_epoch=7,isr=[0],zk_version=20,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,412] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,412] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=30,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,415] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:7),[__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,776] INFO [Controller 1]: Shutting down broker 2 (kafka.controller.KafkaController)
[2016-11-23 16:02:38,776] DEBUG [Controller 1]: All shutting down brokers: 1,2 (kafka.controller.KafkaController)
[2016-11-23 16:02:38,776] DEBUG [Controller 1]: Live brokers:  (kafka.controller.KafkaController)
[2016-11-23 16:02:38,777] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,779] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,779] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,779] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,779] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,782] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,14] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,782] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=14,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=17,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,782] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,782] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,783] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,783] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,783] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,783] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,785] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,28] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,786] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=28,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,787] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,787] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,787] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,787] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,787] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,787] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,790] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,4] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,790] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=4,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,790] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,790] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,790] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,790] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,791] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,791] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,793] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,36] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,793] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=36,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,793] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,793] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,793] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,794] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,794] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,794] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,797] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,6] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,797] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=6,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,797] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,797] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,797] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,798] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,798] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,798] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,800] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,39] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,800] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=39,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,800] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,800] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=39,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,800] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,801] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,801] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,801] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,803] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,23] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,803] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=23,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,804] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,804] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=23,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,804] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,804] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,804] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,804] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,806] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,24] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,807] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=24,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,807] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,807] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,808] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,808] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,808] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,808] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,815] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,38] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,816] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=38,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,817] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,817] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,817] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,817] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,817] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,817] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,822] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,16] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,823] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=16,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,823] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,823] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,823] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,823] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,823] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,823] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,826] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,3] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,827] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=3,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,827] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,827] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=3,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,827] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,827] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,827] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,827] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,830] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,21] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,832] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=21,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,832] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,832] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=21,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,832] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,832] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,832] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,833] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,835] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,10] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,835] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=10,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,836] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,836] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,836] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,836] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,836] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,836] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,838] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,40] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,839] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=40,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=15,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,839] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,839] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,839] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,839] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,840] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,840] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,842] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,34] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,843] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=34,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,843] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,843] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,843] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,846] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,846] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,846] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,846] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,849] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,27] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,850] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=27,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,850] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,850] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=27,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,850] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,850] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,851] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,851] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,853] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,42] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,853] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=42,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=17,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,854] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,854] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,854] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,854] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,854] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,854] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,856] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,11] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,857] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=11,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,857] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,857] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=11,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,857] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,861] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,861] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,861] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,862] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,867] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,47] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,868] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=47,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,868] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,868] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=47,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,868] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,868] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,869] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,869] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,891] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,9] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,891] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=9,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,892] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,892] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,892] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,896] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,896] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,897] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,897] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,900] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,29] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,901] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=29,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,901] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,901] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=29,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,901] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,902] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,902] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,902] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,905] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,8] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,905] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=8,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,905] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,905] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,905] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,905] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,905] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,906] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,910] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,22] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,911] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=22,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=14,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,911] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,911] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,911] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [test2,1] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,917] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,919] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,920] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,920] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,920] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,922] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,18] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,923] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=18,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,923] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,923] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,923] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,923] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,923] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,923] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,933] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,20] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,933] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=20,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,933] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,933] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,933] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,939] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,942] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,942] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,942] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,942] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,950] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,12] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,951] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=12,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,951] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,951] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,951] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,951] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,951] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,951] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,955] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,5] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,955] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=5,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,955] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,955] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=5,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,955] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,955] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,955] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,955] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,959] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,32] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,959] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=32,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,959] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,959] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,960] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,960] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,960] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,960] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,965] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,2] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,969] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=2,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,969] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,969] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,970] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:38,975] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,975] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,975] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,975] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,977] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,0] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,978] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=0,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,979] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,979] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,979] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,980] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,981] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,981] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,983] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,15] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,984] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=15,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,984] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,984] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=15,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,984] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,984] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,984] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,985] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-23 16:02:38,991] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,44] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:38,994] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=44,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:38,995] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,998] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,998] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,999] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:38,999] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:38,999] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,002] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,17] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,004] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=17,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,005] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,005] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,005] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,005] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,005] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,005] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,010] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,48] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,010] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=48,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,012] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,012] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,012] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [test2,0] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:39,016] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,016] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,016] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,016] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,019] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,26] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,019] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=26,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,0,2]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,020] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,020] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,020] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,020] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,020] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,020] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,024] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,33] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,024] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=33,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=18,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,025] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,025] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=33,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,025] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,025] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,025] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,025] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,030] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,41] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,031] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=41,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,031] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,032] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=41,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,032] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,032] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,032] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,032] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,035] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,45] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,036] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=45,controller_epoch=7,leader=0,leader_epoch=6,isr=[0],zk_version=15,replicas=[2,0,1]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,036] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,036] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=45,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,036] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,037] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,038] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,038] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,041] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,35] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,043] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=35,controller_epoch=7,leader=0,leader_epoch=5,isr=[0],zk_version=16,replicas=[1,2,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,043] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,043] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=35,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,043] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,043] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,043] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,049] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,051] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,46] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,052] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=46,controller_epoch=7,leader=1,leader_epoch=5,isr=[1],zk_version=15,replicas=[0,1,2]}],live_leaders=[{id=1,host=localhost,port=9010}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,053] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,053] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,053] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:39,057] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,057] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,057] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:39,057] DEBUG [Controller 1]: Removing replica 2 from ISR 0 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-23 16:02:39,060] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,30] since it is not in the ISR. Leader = 0 ; ISR = List(0) (kafka.controller.KafkaController)
[2016-11-23 16:02:39,065] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=7,partition_states=[{topic=__consumer_offsets,partition=30,controller_epoch=7,leader=0,leader_epoch=7,isr=[0],zk_version=20,replicas=[2,1,0]}],live_leaders=[]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-23 16:02:39,066] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,066] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-23 16:02:39,067] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,30] -> (Leader:0,ISR:0,LeaderEpoch:7,ControllerEpoch:7),[__consumer_offsets,47] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,29] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,41] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,39] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,17] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,14] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,18] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,26] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,0] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,24] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,33] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,20] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,3] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,21] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,5] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,12] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,8] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,23] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,15] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,11] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,48] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,6] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,44] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,42] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[test2,1] -> (Leader:2,ISR:2,LeaderEpoch:16,ControllerEpoch:7),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[test2,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:7),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,45] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,27] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,32] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,36] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,35] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,9] -> (Leader:0,ISR:0,LeaderEpoch:6,ControllerEpoch:7),[__consumer_offsets,38] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:5,ControllerEpoch:7),[__consumer_offsets,2] -> (Leader:0,ISR:0,LeaderEpoch:5,ControllerEpoch:7) (kafka.controller.KafkaController)
[2016-11-23 16:02:45,377] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-11-23 16:02:45,377] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-23 16:02:45,377] INFO [delete-topics-thread-1], Shutting down (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2016-11-23 16:02:45,378] INFO [delete-topics-thread-1], Stopped  (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2016-11-23 16:02:45,378] INFO [delete-topics-thread-1], Shutdown completed (kafka.controller.TopicDeletionManager$DeleteTopicsThread)
[2016-11-23 16:02:45,378] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-23 16:02:45,378] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-23 16:02:45,380] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-23 16:02:45,380] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-23 16:02:45,380] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-23 16:02:45,382] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-23 16:02:45,382] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-23 16:02:45,382] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-23 16:02:45,382] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
