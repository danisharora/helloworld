[2016-11-15 12:00:10,272] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] DEBUG [Controller 1]: topics not in preferred replica Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0)) (kafka.controller.KafkaController)
[2016-11-15 12:00:10,311] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 1.000000 (kafka.controller.KafkaController)
[2016-11-15 12:01:47,401] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2016-11-15 12:01:47,441] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2016-11-15 12:01:47,650] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:01:47,665] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 0, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:01:47,665] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-11-15 12:01:47,667] INFO [Controller 1]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-11-15 12:01:47,667] INFO [Controller-1-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-15 12:01:47,674] WARN [Controller-1-to-broker-2-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,partition_states=[{topic=__consumer_offsets,partition=49,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=38,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=16,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=27,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=othertopic,partition=1,controller_epoch=16,leader=2,leader_epoch=7,isr=[1,2],zk_version=14,replicas=[2,0,1]},{topic=__consumer_offsets,partition=8,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=19,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=2,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=13,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=24,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=46,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=35,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=mytopic,partition=0,controller_epoch=16,leader=-1,leader_epoch=15,isr=[],zk_version=15,replicas=[0]},{topic=__consumer_offsets,partition=5,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=43,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=32,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=21,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=10,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=37,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=48,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=18,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=40,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=29,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=7,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=23,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=34,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=45,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=26,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=15,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=4,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=42,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=9,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=20,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=31,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=othertopic,partition=0,controller_epoch=16,leader=1,leader_epoch=5,isr=[1,2],zk_version=11,replicas=[1,2,0]},{topic=__consumer_offsets,partition=1,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=12,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=17,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=28,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=6,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=39,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=44,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=othertopic,partition=2,controller_epoch=16,leader=1,leader_epoch=8,isr=[1,2],zk_version=13,replicas=[0,1,2]},{topic=__consumer_offsets,partition=47,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=36,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=3,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=14,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=25,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=41,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=30,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=11,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=33,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=22,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=0,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9094,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(2, 172.16.26.72, 9094). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:01:47,679] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,partition_states=[{topic=__consumer_offsets,partition=49,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=38,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=16,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=27,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=othertopic,partition=1,controller_epoch=16,leader=2,leader_epoch=7,isr=[1,2],zk_version=14,replicas=[2,0,1]},{topic=__consumer_offsets,partition=8,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=19,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=2,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=13,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=24,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=46,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=35,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=mytopic,partition=0,controller_epoch=16,leader=-1,leader_epoch=15,isr=[],zk_version=15,replicas=[0]},{topic=__consumer_offsets,partition=5,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=43,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=32,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=21,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=10,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=37,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=48,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=18,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=40,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=29,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=7,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=23,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=34,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=45,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=26,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=15,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=4,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=42,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=9,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=20,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=31,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=othertopic,partition=0,controller_epoch=16,leader=1,leader_epoch=5,isr=[1,2],zk_version=11,replicas=[1,2,0]},{topic=__consumer_offsets,partition=1,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=12,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=17,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=28,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=6,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=39,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=44,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=othertopic,partition=2,controller_epoch=16,leader=1,leader_epoch=8,isr=[1,2],zk_version=13,replicas=[0,1,2]},{topic=__consumer_offsets,partition=47,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=36,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=3,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=14,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=25,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=41,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=30,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=11,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=33,controller_epoch=16,leader=2,leader_epoch=0,isr=[2,1],zk_version=0,replicas=[2,1]},{topic=__consumer_offsets,partition=22,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]},{topic=__consumer_offsets,partition=0,controller_epoch=16,leader=1,leader_epoch=0,isr=[1,2],zk_version=0,replicas=[1,2]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9094,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(1, 172.16.26.72, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:01:47,682] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=othertopic,Partition=0,Replica=0],[Topic=othertopic,Partition=1,Replica=0],[Topic=othertopic,Partition=2,Replica=0],[Topic=mytopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:01:47,683] INFO [Controller-1-to-broker-0-send-thread], Controller 1 connected to Node(0, 172.16.26.72, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:01:47,693] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Pick the leader from the alive assigned replicas: 0 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:01:47,694] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Elect leader 0 from live brokers 0. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:01:47,694] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":16,"isr":[0]} for offline partition [mytopic,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:01:47,698] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:01:47,980] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 172.16.26.72, 9094) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:01:47,981] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:01:49,445] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:01:49,451] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([othertopic,1]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:01:49,461] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:01:49,766] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:01:49,774] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([othertopic,0], [othertopic,2]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:01:49,778] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:05:10,262] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 12:05:10,305] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 12:05:10,305] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:05:10,305] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:05:10,305] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:05:10,305] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:05:10,306] DEBUG [Controller 1]: topics not in preferred replica Map([othertopic,2] -> List(0, 1, 2)) (kafka.controller.KafkaController)
[2016-11-15 12:05:10,306] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.500000 (kafka.controller.KafkaController)
[2016-11-15 12:05:10,306] INFO [Controller 1]: Starting preferred replica leader election for partitions [othertopic,2] (kafka.controller.KafkaController)
[2016-11-15 12:05:10,306] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:05:10,330] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [othertopic,2] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:05:10,341] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,2,0,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:05:10,343] INFO [Controller 1]: Partition [othertopic,2] completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2016-11-15 12:10:10,252] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 12:10:10,277] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 12:10:10,292] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:10:10,292] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:10:10,292] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:10:10,292] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:10:10,292] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:10:10,293] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:15:10,241] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 12:15:10,258] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 12:15:10,258] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:15:10,258] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:15:10,258] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:15:10,259] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:15:10,259] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:15:10,259] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:19:46,432] DEBUG [TopicChangeListener on Controller 1]: Topic change listener fired for path /brokers/topics with children topic1,mytopic,othertopic,__consumer_offsets (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-11-15 12:19:46,449] INFO [TopicChangeListener on Controller 1]: New topics: [Set(topic1)], deleted topics: [Set()], new partition replica assignment [Map([topic1,0] -> List(2))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-11-15 12:19:46,449] INFO [Controller 1]: New topic creation callback for [topic1,0] (kafka.controller.KafkaController)
[2016-11-15 12:19:46,450] INFO [Controller 1]: New partition creation callback for [topic1,0] (kafka.controller.KafkaController)
[2016-11-15 12:19:46,450] INFO [Partition state machine on Controller 1]: Invoking state change to NewPartition for partitions [topic1,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:19:46,477] INFO [Replica state machine on controller 1]: Invoking state change to NewReplica for replicas [Topic=topic1,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:19:46,479] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [topic1,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:19:46,479] DEBUG [Partition state machine on Controller 1]: Live assigned replicas for partition [topic1,0] are: [List(2)] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:19:46,479] DEBUG [Partition state machine on Controller 1]: Initializing leader and isr for partition [topic1,0] to (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:19:46,484] WARN [Controller-1-to-broker-2-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,partition_states=[{topic=topic1,partition=0,controller_epoch=16,leader=2,leader_epoch=0,isr=[2],zk_version=0,replicas=[2]}],live_leaders=[{id=2,host=172.16.26.72,port=9094}]} to broker Node(2, 172.16.26.72, 9094). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:19:46,485] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,partition_states=[{topic=topic1,partition=0,controller_epoch=16,leader=2,leader_epoch=0,isr=[2],zk_version=0,replicas=[2]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9094,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(1, 172.16.26.72, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:19:46,485] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=topic1,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:19:46,485] WARN [Controller-1-to-broker-0-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,partition_states=[{topic=topic1,partition=0,controller_epoch=16,leader=2,leader_epoch=0,isr=[2],zk_version=0,replicas=[2]}],live_brokers=[{id=0,end_points=[{port=9092,host=172.16.26.72,security_protocol_type=0}]},{id=1,end_points=[{port=9093,host=172.16.26.72,security_protocol_type=0}]},{id=2,end_points=[{port=9094,host=172.16.26.72,security_protocol_type=0}]}]} to broker Node(0, 172.16.26.72, 9092). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:19:46,790] INFO [Controller-1-to-broker-0-send-thread], Controller 1 connected to Node(0, 172.16.26.72, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:19:46,790] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 172.16.26.72, 9094) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:19:46,790] INFO [Controller-1-to-broker-1-send-thread], Controller 1 connected to Node(1, 172.16.26.72, 9093) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:20:10,231] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 12:20:10,231] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 12:20:10,231] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:20:10,231] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:20:10,231] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:20:10,231] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:20:10,232] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:20:10,232] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:23:11,429] INFO [Controller 1]: Shutting down broker 2 (kafka.controller.KafkaController)
[2016-11-15 12:23:11,430] DEBUG [Controller 1]: All shutting down brokers: 2 (kafka.controller.KafkaController)
[2016-11-15 12:23:11,430] DEBUG [Controller 1]: Live brokers: 0,1 (kafka.controller.KafkaController)
[2016-11-15 12:23:11,431] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,431] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,431] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,431] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,451] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,40] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,452] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,452] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=40,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,452] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,459] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,39] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,497] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,2,0,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,498] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,498] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,498] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,498] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,508] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,32] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,509] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,509] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=32,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,509] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,509] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,509] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,509] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2,0 for partition [othertopic,2]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,518] INFO [Controller 1]: New leader and ISR for partition [othertopic,2] is {"leader":0,"leader_epoch":10,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,521] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,521] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,521] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,534] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,13] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,537] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,538] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,543] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,21] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,545] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,546] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,546] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,546] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,546] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,550] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,12] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,551] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,551] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=12,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,552] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,564] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,7] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,565] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,566] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,567] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,567] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,567] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,581] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,18] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,582] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,582] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=18,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,582] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,583] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,584] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,584] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,589] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,24] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,592] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,592] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=24,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,592] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,592] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,592] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,592] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,595] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,26] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,598] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,598] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=26,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,598] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,600] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,19] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,601] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,602] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,602] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,602] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,605] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,608] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,22] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,609] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,609] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=22,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,609] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,609] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,609] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,610] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,612] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,36] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,613] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,613] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=36,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,613] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,616] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,49] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,618] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,619] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,623] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,27] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,625] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,630] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,633] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,11] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,634] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,638] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,638] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,638] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,638] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,670] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,46] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,671] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,671] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=46,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,671] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,674] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,31] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,675] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,676] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,678] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,679] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,679] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,682] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,2] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,684] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,684] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=2,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,684] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,686] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,1] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,687] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,688] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,695] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,45] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,741] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,0,LeaderEpoch:5,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,743] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,743] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,744] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,744] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2,0 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,747] INFO [Controller 1]: New leader and ISR for partition [othertopic,0] is {"leader":1,"leader_epoch":6,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,748] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,748] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=othertopic,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,749] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,749] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,749] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,749] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,752] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,42] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,753] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,753] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=42,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,753] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,753] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,754] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,754] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,757] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,4] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,758] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,758] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=4,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,759] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,761] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,41] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,762] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,763] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,763] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,763] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,763] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,767] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,6] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,768] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,768] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=6,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,768] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,768] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,768] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,768] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,771] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,44] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,772] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,772] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=44,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,772] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,775] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,37] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,776] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,778] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,783] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,1] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,785] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,792] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,795] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,47] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,797] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,801] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,803] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,17] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,804] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,805] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,805] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,805] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,806] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,811] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,14] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,812] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,812] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=14,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,812] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,814] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,5] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,816] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,817] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,820] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,29] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,822] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,822] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,826] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,9] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,828] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,828] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,829] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,829] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,829] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,833] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,48] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,834] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,834] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=48,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,834] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,837] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,23] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,838] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,839] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,839] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,839] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,839] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,844] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,20] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,845] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,845] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=20,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,845] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,848] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,25] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,849] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,852] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,853] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,853] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,853] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,857] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,16] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,858] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,858] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=16,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,858] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,861] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,35] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,862] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,863] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,863] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,863] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,864] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,867] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,34] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,869] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,869] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=34,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,869] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,871] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,15] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,872] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,873] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,873] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,873] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,873] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,878] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,10] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,879] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,879] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=10,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,879] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,881] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,3] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,882] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,884] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,884] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,884] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,884] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,889] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,28] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,890] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,890] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=28,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,890] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,890] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,890] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,890] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,894] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,30] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,895] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,896] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=30,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,896] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,899] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,43] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,901] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,1,LeaderEpoch:0,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,905] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,905] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,905] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,905] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,911] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,0] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,914] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,915] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=0,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,915] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,915] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,915] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,915] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,926] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,38] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,930] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,930] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=38,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,930] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,948] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,33] : current leader = 2, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:23:11,951] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:11,952] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,952] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,952] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:11,952] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-15 12:23:11,956] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,8] is {"leader":1,"leader_epoch":1,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:11,957] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,957] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=8,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:11,958] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:6,ControllerEpoch:16),[__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16),[__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:16),[__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16),[__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16),[__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16) (kafka.controller.KafkaController)
[2016-11-15 12:23:12,003] WARN [Controller-1-to-broker-2-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=46}]} to broker Node(2, 172.16.26.72, 9094). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:23:12,208] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:23:12,304] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,16], [__consumer_offsets,44], [__consumer_offsets,28], [__consumer_offsets,4], [__consumer_offsets,24], [__consumer_offsets,0], [__consumer_offsets,38], [__consumer_offsets,8], [__consumer_offsets,36], [__consumer_offsets,6], [__consumer_offsets,20], [__consumer_offsets,2], [__consumer_offsets,34], [__consumer_offsets,22], [__consumer_offsets,42], [__consumer_offsets,14], [__consumer_offsets,10], [__consumer_offsets,48], [__consumer_offsets,18], [__consumer_offsets,12], [__consumer_offsets,26], [__consumer_offsets,30], [othertopic,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:23:12,308] WARN [Controller-1-to-broker-2-send-thread], Controller 1's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:23:12,310] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:23:12,611] WARN [Controller-1-to-broker-2-send-thread], Controller 1's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:23:12,914] WARN [Controller-1-to-broker-2-send-thread], Controller 1's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:23:13,218] WARN [Controller-1-to-broker-2-send-thread], Controller 1's connection to broker Node(2, 172.16.26.72, 9094) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(2, 172.16.26.72, 9094) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:23:13,504] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:23:13,512] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: 2, all live brokers: 0,1 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:23:13,514] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 12:23:13,514] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 12:23:13,514] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 12:23:13,514] INFO [Controller 1]: Broker failure callback for 2 (kafka.controller.KafkaController)
[2016-11-15 12:23:13,514] INFO [Controller 1]: Removed ArrayBuffer(2) from list of shutting down brokers. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,514] INFO [Partition state machine on Controller 1]: Invoking state change to OfflinePartition for partitions [topic1,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:23:13,518] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:23:13,521] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=othertopic,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=topic1,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=othertopic,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=othertopic,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:23:13,521] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,523] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,17] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,524] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,38]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,532] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,38] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,532] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,535] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,39] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,536] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,537] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,23] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,537] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,48]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,540] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,48] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,540] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,42]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,543] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,42] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,543] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,2]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,546] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,2] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,546] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,22]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,549] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,22] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,549] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,552] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,13] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,552] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,34]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,556] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,34] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,556] DEBUG [Controller 1]: Removing replica 2 from ISR 1,0 for partition [othertopic,1]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,559] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [othertopic,1] since it is not in the ISR. Leader = 1 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,559] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,40]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,565] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,40] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,565] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,568] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,33] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,568] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,571] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,3] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,571] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,577] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,37] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,577] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,24]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,581] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,24] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,581] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,585] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,11] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,586] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,20]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,589] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,20] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,589] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,591] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,27] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,592] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,30]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,595] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,30] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,595] DEBUG [Controller 1]: Removing replica 2 from ISR 2 for partition [topic1,0]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,606] INFO [Controller 1]: New leader and ISR for partition [topic1,0] is {"leader":-1,"leader_epoch":1,"isr":[]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,606] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,608] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,15] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,608] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,28]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,611] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,28] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,612] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,614] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,7] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,614] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,616] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,43] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,616] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,10]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,619] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,10] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,620] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,12]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,625] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,12] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,626] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,32]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,628] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,32] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,629] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,4]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,635] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,4] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,635] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,26]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,642] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,26] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,642] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,644] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,35] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,644] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,46]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,646] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,46] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,646] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,6]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,649] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,6] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,649] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,8]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,651] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,8] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,652] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,44]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,654] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,44] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,654] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,656] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,45] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,656] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,657] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,49] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,658] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,659] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,1] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,660] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,661] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,19] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,662] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,36]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,664] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,36] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,664] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,14]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,666] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,14] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,667] DEBUG [Controller 1]: Removing replica 2 from ISR 1,0,2 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,669] INFO [Controller 1]: New leader and ISR for partition [othertopic,0] is {"leader":1,"leader_epoch":7,"isr":[1,0]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,670] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,671] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,31] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,672] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,673] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,21] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,673] DEBUG [Controller 1]: Removing replica 2 from ISR 1,0 for partition [othertopic,2]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,676] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [othertopic,2] since it is not in the ISR. Leader = 0 ; ISR = List(1, 0) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,676] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,678] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,25] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,678] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,680] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,5] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,680] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,682] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,41] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,682] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,683] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,47] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,684] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,16]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,686] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,16] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,686] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,0]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,689] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,0] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,689] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,690] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,29] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,690] DEBUG [Controller 1]: Removing replica 2 from ISR 1,2 for partition [__consumer_offsets,18]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,693] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,18] is {"leader":1,"leader_epoch":2,"isr":[1]} (kafka.controller.KafkaController)
[2016-11-15 12:23:13,693] DEBUG [Controller 1]: Removing replica 2 from ISR 1 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-15 12:23:13,694] WARN [Controller 1]: Cannot remove replica 2 from ISR of partition [__consumer_offsets,9] since it is not in the ISR. Leader = 1 ; ISR = List(1) (kafka.controller.KafkaController)
[2016-11-15 12:23:13,703] DEBUG The stop replica request (delete = true) sent to broker 2 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:13,704] DEBUG The stop replica request (delete = false) sent to broker 2 is [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=othertopic,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=topic1,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=othertopic,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=othertopic,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=17}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=38}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=39}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=23}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=48}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=42}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=2}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=22}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=13}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=34}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=1}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=40}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,704] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=33}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=3}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=37}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=24}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=11}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=20}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=27}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=30}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=topic1,partition=0}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=15}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=28}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=7}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=43}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=10}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=12}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=32}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=4}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=26}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=35}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=46}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=6}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=8}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,705] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=44}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=45}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=49}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=1}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=19}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=36}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=14}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=0}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=31}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=21}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=2}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=25}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=5}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=41}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=47}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=16}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=0}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,706] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=29}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,716] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=18}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:23:13,718] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=9}]} to broker 2, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:24:21,525] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:24:21,537] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:24:21,537] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2016-11-15 12:24:21,539] INFO [Controller 1]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2016-11-15 12:24:21,540] INFO [Controller-1-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-11-15 12:24:21,548] INFO [Replica state machine on controller 1]: Invoking state change to OnlineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=2],[Topic=__consumer_offsets,Partition=38,Replica=2],[Topic=__consumer_offsets,Partition=39,Replica=2],[Topic=__consumer_offsets,Partition=23,Replica=2],[Topic=__consumer_offsets,Partition=48,Replica=2],[Topic=__consumer_offsets,Partition=42,Replica=2],[Topic=__consumer_offsets,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=22,Replica=2],[Topic=__consumer_offsets,Partition=13,Replica=2],[Topic=__consumer_offsets,Partition=34,Replica=2],[Topic=othertopic,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=40,Replica=2],[Topic=__consumer_offsets,Partition=33,Replica=2],[Topic=__consumer_offsets,Partition=3,Replica=2],[Topic=__consumer_offsets,Partition=37,Replica=2],[Topic=__consumer_offsets,Partition=24,Replica=2],[Topic=__consumer_offsets,Partition=11,Replica=2],[Topic=__consumer_offsets,Partition=20,Replica=2],[Topic=__consumer_offsets,Partition=27,Replica=2],[Topic=__consumer_offsets,Partition=30,Replica=2],[Topic=topic1,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=15,Replica=2],[Topic=__consumer_offsets,Partition=28,Replica=2],[Topic=__consumer_offsets,Partition=7,Replica=2],[Topic=__consumer_offsets,Partition=43,Replica=2],[Topic=__consumer_offsets,Partition=10,Replica=2],[Topic=__consumer_offsets,Partition=12,Replica=2],[Topic=__consumer_offsets,Partition=32,Replica=2],[Topic=__consumer_offsets,Partition=4,Replica=2],[Topic=__consumer_offsets,Partition=26,Replica=2],[Topic=__consumer_offsets,Partition=35,Replica=2],[Topic=__consumer_offsets,Partition=46,Replica=2],[Topic=__consumer_offsets,Partition=6,Replica=2],[Topic=__consumer_offsets,Partition=8,Replica=2],[Topic=__consumer_offsets,Partition=44,Replica=2],[Topic=__consumer_offsets,Partition=45,Replica=2],[Topic=__consumer_offsets,Partition=49,Replica=2],[Topic=__consumer_offsets,Partition=1,Replica=2],[Topic=__consumer_offsets,Partition=19,Replica=2],[Topic=__consumer_offsets,Partition=36,Replica=2],[Topic=__consumer_offsets,Partition=14,Replica=2],[Topic=othertopic,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=31,Replica=2],[Topic=__consumer_offsets,Partition=21,Replica=2],[Topic=othertopic,Partition=2,Replica=2],[Topic=__consumer_offsets,Partition=25,Replica=2],[Topic=__consumer_offsets,Partition=5,Replica=2],[Topic=__consumer_offsets,Partition=41,Replica=2],[Topic=__consumer_offsets,Partition=47,Replica=2],[Topic=__consumer_offsets,Partition=16,Replica=2],[Topic=__consumer_offsets,Partition=0,Replica=2],[Topic=__consumer_offsets,Partition=29,Replica=2],[Topic=__consumer_offsets,Partition=18,Replica=2],[Topic=__consumer_offsets,Partition=9,Replica=2] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:24:21,549] INFO [Controller-1-to-broker-2-send-thread], Controller 1 connected to Node(2, 172.16.26.72, 9094) for sending state change requests (kafka.controller.RequestSendThread)
[2016-11-15 12:24:21,584] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Pick the leader from the alive assigned replicas: 2 (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:24:21,586] WARN [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [topic1,0]. Elect leader 2 from live brokers 2. There's potential data loss. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:24:21,586] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":2,"leader_epoch":2,"isr":[2]} for offline partition [topic1,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:24:21,592] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,0,LeaderEpoch:7,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,0,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:0,ISR:1,0,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:24:24,726] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:24:24,857] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([__consumer_offsets,32], [__consumer_offsets,16], [__consumer_offsets,49], [__consumer_offsets,44], [__consumer_offsets,28], [__consumer_offsets,17], [__consumer_offsets,23], [__consumer_offsets,7], [__consumer_offsets,4], [__consumer_offsets,29], [__consumer_offsets,35], [__consumer_offsets,3], [__consumer_offsets,24], [__consumer_offsets,41], [__consumer_offsets,0], [__consumer_offsets,38], [__consumer_offsets,13], [__consumer_offsets,8], [__consumer_offsets,5], [__consumer_offsets,39], [__consumer_offsets,36], [__consumer_offsets,40], [__consumer_offsets,45], [__consumer_offsets,15], [__consumer_offsets,33], [__consumer_offsets,37], [__consumer_offsets,21], [othertopic,1], [__consumer_offsets,6], [__consumer_offsets,11], [__consumer_offsets,20], [__consumer_offsets,47], [__consumer_offsets,2], [__consumer_offsets,27], [__consumer_offsets,34], [__consumer_offsets,9], [__consumer_offsets,22], [__consumer_offsets,42], [__consumer_offsets,14], [__consumer_offsets,25], [__consumer_offsets,10], [__consumer_offsets,48], [__consumer_offsets,31], [__consumer_offsets,18], [__consumer_offsets,19], [__consumer_offsets,12], [__consumer_offsets,46], [__consumer_offsets,43], [__consumer_offsets,1], [__consumer_offsets,26], [__consumer_offsets,30], [othertopic,0]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:24:24,881] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:24:24,895] DEBUG Sending MetadataRequest to Brokers:ArrayBuffer(0, 1, 2) for TopicAndPartitions:Set([othertopic,2]) (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:24:24,899] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-11-15 12:24:57,048] INFO [Controller 1]: Shutting down broker 0 (kafka.controller.KafkaController)
[2016-11-15 12:24:57,049] DEBUG [Controller 1]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2016-11-15 12:24:57,049] DEBUG [Controller 1]: Live brokers: 1,2 (kafka.controller.KafkaController)
[2016-11-15 12:24:57,049] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,049] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,049] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:24:57,049] DEBUG [Controller 1]: Removing replica 0 from ISR 1,0,2 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-15 12:24:57,055] INFO [Controller 1]: New leader and ISR for partition [othertopic,0] is {"leader":1,"leader_epoch":8,"isr":[1,2]} (kafka.controller.KafkaController)
[2016-11-15 12:24:57,056] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,056] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,056] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,056] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=1,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,056] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=1,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:24:57,056] DEBUG [Controller 1]: Removing replica 0 from ISR 1,0,2 for partition [othertopic,1]. (kafka.controller.KafkaController)
[2016-11-15 12:24:57,071] INFO [Controller 1]: New leader and ISR for partition [othertopic,1] is {"leader":1,"leader_epoch":9,"isr":[1,2]} (kafka.controller.KafkaController)
[2016-11-15 12:24:57,073] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,073] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=1,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:57,073] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:24:57,088] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,2] : current leader = 0, new leader = 1 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:24:57,096] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:24:57,097] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,47] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,29] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,41] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,39] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16),[__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16),[__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16),[__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[mytopic,0] -> (Leader:0,ISR:0,LeaderEpoch:16,ControllerEpoch:16),[__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16),[__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16) (kafka.controller.KafkaController)
[2016-11-15 12:24:57,117] WARN [Controller-1-to-broker-0-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=1}]} to broker Node(0, 172.16.26.72, 9092). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:24:57,430] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:24:57,734] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:24:58,041] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:24:58,346] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:24:58,651] WARN [Controller-1-to-broker-0-send-thread], Controller 1's connection to broker Node(0, 172.16.26.72, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 172.16.26.72, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:24:58,929] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-11-15 12:24:58,929] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-15 12:24:58,931] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-15 12:24:58,931] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:24:58,931] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2016-11-15 12:24:58,936] INFO [BrokerChangeListener on Controller 1]: Broker change listener fired for path /brokers/ids with children 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:24:58,940] INFO [BrokerChangeListener on Controller 1]: Newly added brokers: , deleted brokers: 0, all live brokers: 1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-11-15 12:24:58,941] INFO [Controller-1-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 12:24:58,942] INFO [Controller-1-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 12:24:58,942] INFO [Controller-1-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 12:24:58,942] INFO [Controller 1]: Broker failure callback for 0 (kafka.controller.KafkaController)
[2016-11-15 12:24:58,942] INFO [Controller 1]: Removed ArrayBuffer(0) from list of shutting down brokers. (kafka.controller.KafkaController)
[2016-11-15 12:24:58,942] INFO [Partition state machine on Controller 1]: Invoking state change to OfflinePartition for partitions [mytopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:24:58,945] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [mytopic,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-11-15 12:24:58,946] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=0,Replica=0],[Topic=othertopic,Partition=1,Replica=0],[Topic=othertopic,Partition=2,Replica=0],[Topic=mytopic,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:24:58,946] DEBUG [Controller 1]: Removing replica 0 from ISR 1,2 for partition [othertopic,0]. (kafka.controller.KafkaController)
[2016-11-15 12:24:58,947] WARN [Controller 1]: Cannot remove replica 0 from ISR of partition [othertopic,0] since it is not in the ISR. Leader = 1 ; ISR = List(1, 2) (kafka.controller.KafkaController)
[2016-11-15 12:24:58,948] DEBUG [Controller 1]: Removing replica 0 from ISR 1,2 for partition [othertopic,1]. (kafka.controller.KafkaController)
[2016-11-15 12:24:58,950] WARN [Controller 1]: Cannot remove replica 0 from ISR of partition [othertopic,1] since it is not in the ISR. Leader = 1 ; ISR = List(1, 2) (kafka.controller.KafkaController)
[2016-11-15 12:24:58,950] DEBUG [Controller 1]: Removing replica 0 from ISR 1,2 for partition [othertopic,2]. (kafka.controller.KafkaController)
[2016-11-15 12:24:58,952] WARN [Controller 1]: Cannot remove replica 0 from ISR of partition [othertopic,2] since it is not in the ISR. Leader = 1 ; ISR = List(1, 2) (kafka.controller.KafkaController)
[2016-11-15 12:24:58,952] DEBUG [Controller 1]: Removing replica 0 from ISR 0 for partition [mytopic,0]. (kafka.controller.KafkaController)
[2016-11-15 12:24:58,956] INFO [Controller 1]: New leader and ISR for partition [mytopic,0] is {"leader":-1,"leader_epoch":17,"isr":[]} (kafka.controller.KafkaController)
[2016-11-15 12:24:58,958] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:58,958] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=othertopic,Partition=0,Replica=0],[Topic=othertopic,Partition=1,Replica=0],[Topic=othertopic,Partition=2,Replica=0],[Topic=mytopic,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:24:58,958] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=0}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:24:58,958] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=1}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:24:58,958] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=othertopic,partition=2}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:24:58,958] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=mytopic,partition=0}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:25:10,220] TRACE [Controller 1]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-11-15 12:25:10,220] DEBUG [Controller 1]: preferred replicas by broker Map(2 -> Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [topic1,0] -> List(2), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)), 1 -> Map([__consumer_offsets,30] -> List(1, 2), [__consumer_offsets,10] -> List(1, 2), [__consumer_offsets,14] -> List(1, 2), [__consumer_offsets,40] -> List(1, 2), [__consumer_offsets,18] -> List(1, 2), [__consumer_offsets,26] -> List(1, 2), [__consumer_offsets,0] -> List(1, 2), [__consumer_offsets,24] -> List(1, 2), [othertopic,0] -> List(1, 2, 0), [__consumer_offsets,20] -> List(1, 2), [__consumer_offsets,22] -> List(1, 2), [__consumer_offsets,12] -> List(1, 2), [__consumer_offsets,8] -> List(1, 2), [__consumer_offsets,48] -> List(1, 2), [__consumer_offsets,6] -> List(1, 2), [__consumer_offsets,28] -> List(1, 2), [__consumer_offsets,4] -> List(1, 2), [__consumer_offsets,44] -> List(1, 2), [__consumer_offsets,42] -> List(1, 2), [__consumer_offsets,34] -> List(1, 2), [__consumer_offsets,46] -> List(1, 2), [__consumer_offsets,32] -> List(1, 2), [__consumer_offsets,36] -> List(1, 2), [__consumer_offsets,38] -> List(1, 2), [__consumer_offsets,2] -> List(1, 2), [__consumer_offsets,16] -> List(1, 2)), 0 -> Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0))) (kafka.controller.KafkaController)
[2016-11-15 12:25:10,220] DEBUG [Controller 1]: topics not in preferred replica Map([__consumer_offsets,19] -> List(2, 1), [__consumer_offsets,47] -> List(2, 1), [__consumer_offsets,29] -> List(2, 1), [__consumer_offsets,41] -> List(2, 1), [__consumer_offsets,39] -> List(2, 1), [__consumer_offsets,17] -> List(2, 1), [__consumer_offsets,33] -> List(2, 1), [__consumer_offsets,21] -> List(2, 1), [__consumer_offsets,3] -> List(2, 1), [__consumer_offsets,5] -> List(2, 1), [othertopic,1] -> List(2, 0, 1), [__consumer_offsets,23] -> List(2, 1), [__consumer_offsets,15] -> List(2, 1), [__consumer_offsets,11] -> List(2, 1), [__consumer_offsets,13] -> List(2, 1), [__consumer_offsets,49] -> List(2, 1), [__consumer_offsets,37] -> List(2, 1), [__consumer_offsets,31] -> List(2, 1), [__consumer_offsets,25] -> List(2, 1), [__consumer_offsets,45] -> List(2, 1), [__consumer_offsets,27] -> List(2, 1), [__consumer_offsets,43] -> List(2, 1), [__consumer_offsets,35] -> List(2, 1), [__consumer_offsets,7] -> List(2, 1), [__consumer_offsets,9] -> List(2, 1), [__consumer_offsets,1] -> List(2, 1)) (kafka.controller.KafkaController)
[2016-11-15 12:25:10,221] TRACE [Controller 1]: leader imbalance ratio for broker 2 is 0.962963 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,221] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,19] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,221] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,19] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,223] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,19] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,224] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,225] INFO [Controller 1]: Partition [__consumer_offsets,19] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,225] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,47] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,225] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,47] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,228] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,47] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,230] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,231] INFO [Controller 1]: Partition [__consumer_offsets,47] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,231] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,29] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,231] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,29] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,236] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,29] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,239] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,240] INFO [Controller 1]: Partition [__consumer_offsets,29] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,240] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,41] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,241] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,41] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,244] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,41] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,250] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,251] INFO [Controller 1]: Partition [__consumer_offsets,41] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,251] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,39] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,251] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,39] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,256] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,39] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,261] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,261] INFO [Controller 1]: Partition [__consumer_offsets,39] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,261] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,17] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,262] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,17] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,268] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,17] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,272] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,273] INFO [Controller 1]: Partition [__consumer_offsets,17] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,273] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,33] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,273] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,33] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,276] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,33] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,279] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,280] INFO [Controller 1]: Partition [__consumer_offsets,33] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,280] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,21] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,280] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,21] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,285] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,21] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,289] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,290] INFO [Controller 1]: Partition [__consumer_offsets,21] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,290] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,3] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,290] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,3] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,294] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,3] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,298] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,299] INFO [Controller 1]: Partition [__consumer_offsets,3] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,300] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,5] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,300] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,5] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,303] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,5] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,305] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:1,ISR:1,2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,306] INFO [Controller 1]: Partition [__consumer_offsets,5] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,306] INFO [Controller 1]: Starting preferred replica leader election for partitions [othertopic,1] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,306] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,310] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [othertopic,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,314] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,315] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,partition_states=[{topic=othertopic,partition=1,controller_epoch=16,leader=2,leader_epoch=10,isr=[1,2],zk_version=19,replicas=[2,0,1]}],live_leaders=[{id=2,host=172.16.26.72,port=9094}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:25:10,315] INFO [Controller 1]: Partition [othertopic,1] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,315] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,23] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,315] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,23] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,321] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,23] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,324] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,324] INFO [Controller 1]: Partition [__consumer_offsets,23] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,325] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,15] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,325] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,15] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,330] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,15] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,331] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,332] INFO [Controller 1]: Partition [__consumer_offsets,15] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,332] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,11] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,332] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,11] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,338] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,11] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,361] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,362] INFO [Controller 1]: Partition [__consumer_offsets,11] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,362] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,13] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,362] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,13] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,368] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,13] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,371] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,372] INFO [Controller 1]: Partition [__consumer_offsets,13] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,373] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,49] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,373] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,49] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,376] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,49] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,377] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,378] INFO [Controller 1]: Partition [__consumer_offsets,49] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,378] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,37] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,378] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,37] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,383] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,37] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,384] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,385] INFO [Controller 1]: Partition [__consumer_offsets,37] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,385] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,31] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,385] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,31] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,389] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,31] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,390] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,391] INFO [Controller 1]: Partition [__consumer_offsets,31] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,392] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,25] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,392] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,25] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,395] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,25] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,397] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,402] INFO [Controller 1]: Partition [__consumer_offsets,25] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,402] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,45] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,402] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,45] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,406] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,45] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,408] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,410] INFO [Controller 1]: Partition [__consumer_offsets,45] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,410] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,27] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,413] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,27] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,415] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,27] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,417] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,418] INFO [Controller 1]: Partition [__consumer_offsets,27] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,418] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,43] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,419] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,43] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,422] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,43] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,424] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,426] INFO [Controller 1]: Partition [__consumer_offsets,43] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,426] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,35] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,426] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,35] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,430] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,35] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,431] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,433] INFO [Controller 1]: Partition [__consumer_offsets,35] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,433] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,7] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,434] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,7] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,436] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,7] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,438] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,440] INFO [Controller 1]: Partition [__consumer_offsets,7] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,440] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,9] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,440] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,9] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,444] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,9] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,446] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,449] INFO [Controller 1]: Partition [__consumer_offsets,9] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,449] INFO [Controller 1]: Starting preferred replica leader election for partitions [__consumer_offsets,1] (kafka.controller.KafkaController)
[2016-11-15 12:25:10,449] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,1] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,452] INFO [PreferredReplicaPartitionLeaderSelector]: Current leader 1 for partition [__consumer_offsets,1] is not the preferred replica. Trigerring preferred replica leader election (kafka.controller.PreferredReplicaPartitionLeaderSelector)
[2016-11-15 12:25:10,454] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:10,454] INFO [Controller 1]: Partition [__consumer_offsets,1] completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,458] DEBUG [Controller 1]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-11-15 12:25:10,458] TRACE [Controller 1]: leader imbalance ratio for broker 1 is 0.000000 (kafka.controller.KafkaController)
[2016-11-15 12:25:10,458] DEBUG [Controller 1]: topics not in preferred replica Map([othertopic,2] -> List(0, 1, 2), [mytopic,0] -> List(0)) (kafka.controller.KafkaController)
[2016-11-15 12:25:10,458] TRACE [Controller 1]: leader imbalance ratio for broker 0 is 1.000000 (kafka.controller.KafkaController)
[2016-11-15 12:25:34,697] INFO [Controller 1]: Shutting down broker 1 (kafka.controller.KafkaController)
[2016-11-15 12:25:34,697] DEBUG [Controller 1]: All shutting down brokers: 1 (kafka.controller.KafkaController)
[2016-11-15 12:25:34,697] DEBUG [Controller 1]: Live brokers: 2 (kafka.controller.KafkaController)
[2016-11-15 12:25:34,698] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,40] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,699] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,40] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,701] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,702] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,702] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,702] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,702] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,39]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,712] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,39] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,713] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,713] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=39,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,713] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,32] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,717] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,32] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,719] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:1,ISR:1,2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,720] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,722] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,2] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,724] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,725] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,725] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,725] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,725] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,13]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,730] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,13] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,731] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,731] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=13,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,731] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,731] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,731] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,731] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,21]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,736] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,21] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,736] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,737] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=21,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,737] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,12] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,740] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,12] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,741] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,742] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,742] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,742] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,742] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,7]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,750] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,7] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,750] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,750] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=7,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,750] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,18] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,754] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,18] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,756] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,756] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,24] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,761] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,24] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,796] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,798] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,26] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,800] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,26] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,804] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,805] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,805] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,805] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,806] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,19]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,824] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,19] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,825] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,825] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=19,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,825] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,22] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,829] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,22] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,831] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,832] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,36] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,836] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,36] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,837] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:1,ISR:1,2,LeaderEpoch:1,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,838] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,838] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,838] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,838] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,49]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,842] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,49] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,842] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,842] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=49,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,843] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,843] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,843] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,843] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,27]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,847] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,27] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,849] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,849] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=27,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,849] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,850] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,850] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,850] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,11]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,853] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,11] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,853] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,853] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=11,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,854] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,46] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,856] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,46] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,858] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,859] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,861] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,862] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,863] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,31]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,867] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,31] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,868] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,868] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=31,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,869] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,2] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,872] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,2] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,874] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:1,ISR:1,2,LeaderEpoch:8,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:1,2,LeaderEpoch:10,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,878] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,879] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=othertopic,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,880] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=othertopic,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,880] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [othertopic,1]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,884] INFO [Controller 1]: New leader and ISR for partition [othertopic,1] is {"leader":2,"leader_epoch":11,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,884] WARN [Channel manager on controller 1]: Not sending request {controller_id=1,controller_epoch=16,partition_states=[{topic=othertopic,partition=1,controller_epoch=16,leader=2,leader_epoch=11,isr=[2],zk_version=20,replicas=[2,0,1]}],live_leaders=[{id=2,host=172.16.26.72,port=9094}]} to broker 0, since it is offline. (kafka.controller.ControllerChannelManager)
[2016-11-15 12:25:34,884] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,884] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=othertopic,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,884] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,884] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,884] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,885] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,45]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,888] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,45] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,889] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,889] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=45,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,889] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [othertopic,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,891] DEBUG [ControlledShutdownLeaderSelector]: Partition [othertopic,0] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,892] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,894] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,42] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,899] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,42] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,900] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,901] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,4] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,904] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,4] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,905] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,906] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,906] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,906] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,906] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,41]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,911] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,41] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,911] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,911] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=41,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,912] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,6] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,914] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,6] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,916] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,921] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,44] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,924] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,44] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,925] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,926] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,926] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,926] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,926] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,37]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,932] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,37] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,933] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,933] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=37,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,933] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,933] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,933] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,934] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,1]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,937] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,1] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,938] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,938] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=1,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,938] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,938] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,938] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,939] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,47]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,947] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,47] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,947] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,948] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=47,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,948] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,948] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,948] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,948] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,17]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,953] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,17] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,953] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,953] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=17,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,954] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,14] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,956] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,14] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,957] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,958] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,958] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,958] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,958] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,5]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,965] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,5] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,966] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,966] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=5,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,966] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,966] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,966] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,966] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,29]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,970] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,29] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,971] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,971] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=29,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,971] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,971] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,972] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,972] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,9]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,976] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,9] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,977] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,977] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=9,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,977] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,48] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,983] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,48] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:34,985] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:34,988] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,988] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,988] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:34,988] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,23]. (kafka.controller.KafkaController)
[2016-11-15 12:25:34,998] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,23] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:34,999] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,999] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=23,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:34,999] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,20] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,002] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,20] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,004] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,005] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,005] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,005] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:35,005] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,25]. (kafka.controller.KafkaController)
[2016-11-15 12:25:35,018] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,25] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:35,021] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,021] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=25,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,021] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,16] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,023] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,16] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,025] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,026] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,026] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,026] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:35,026] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,35]. (kafka.controller.KafkaController)
[2016-11-15 12:25:35,046] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,35] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:35,047] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,047] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=35,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,047] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,34] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,050] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,34] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,053] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,054] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,054] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,054] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:35,054] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,15]. (kafka.controller.KafkaController)
[2016-11-15 12:25:35,060] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,15] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:35,061] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,061] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=15,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,061] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,10] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,067] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,10] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,069] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,074] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,074] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,074] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:35,074] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,3]. (kafka.controller.KafkaController)
[2016-11-15 12:25:35,080] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,3] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:35,081] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,081] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=3,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,081] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,28] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,085] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,28] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,086] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,086] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,30] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,092] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,30] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,109] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,117] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,117] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,117] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:35,117] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,43]. (kafka.controller.KafkaController)
[2016-11-15 12:25:35,129] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,43] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:35,131] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,131] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=43,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,131] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,0] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,135] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,0] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,136] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,137] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,38] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,142] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,38] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,144] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:1,ISR:1,2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,146] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,146] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,147] INFO [Replica state machine on controller 1]: Invoking state change to OfflineReplica for replicas [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:35,147] DEBUG [Controller 1]: Removing replica 1 from ISR 1,2 for partition [__consumer_offsets,33]. (kafka.controller.KafkaController)
[2016-11-15 12:25:35,152] INFO [Controller 1]: New leader and ISR for partition [__consumer_offsets,33] is {"leader":2,"leader_epoch":3,"isr":[2]} (kafka.controller.KafkaController)
[2016-11-15 12:25:35,153] DEBUG The stop replica request (delete = true) sent to broker 1 is  (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,153] DEBUG The stop replica request (delete = false) sent to broker 1 is [Topic=__consumer_offsets,Partition=33,Replica=1] (kafka.controller.ControllerBrokerRequestBatch)
[2016-11-15 12:25:35,153] INFO [Partition state machine on Controller 1]: Invoking state change to OnlinePartition for partitions [__consumer_offsets,8] (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,162] DEBUG [ControlledShutdownLeaderSelector]: Partition [__consumer_offsets,8] : current leader = 1, new leader = 2 (kafka.controller.ControlledShutdownLeaderSelector)
[2016-11-15 12:25:35,166] DEBUG [Partition state machine on Controller 1]: After leader election, leader cache is updated to Map([__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16), [__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16), [__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16), [__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16), [__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16), [__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16), [__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16)) (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:35,167] TRACE [Controller 1]: All leaders = [__consumer_offsets,19] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,30] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,47] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,29] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,41] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,39] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,17] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,10] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,14] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,40] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,18] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,26] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,0] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,24] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,33] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[othertopic,0] -> (Leader:2,ISR:2,LeaderEpoch:9,ControllerEpoch:16),[__consumer_offsets,20] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,3] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,21] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,5] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,22] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[othertopic,1] -> (Leader:2,ISR:2,LeaderEpoch:11,ControllerEpoch:16),[__consumer_offsets,12] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,8] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,23] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,15] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,11] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,48] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,13] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,49] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,6] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,28] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,4] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,37] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,31] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,44] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,42] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,34] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[topic1,0] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,46] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,25] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,45] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,27] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,32] -> (Leader:2,ISR:2,LeaderEpoch:2,ControllerEpoch:16),[__consumer_offsets,43] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[othertopic,2] -> (Leader:2,ISR:2,LeaderEpoch:12,ControllerEpoch:16),[__consumer_offsets,36] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[mytopic,0] -> (Leader:-1,ISR:,LeaderEpoch:17,ControllerEpoch:16),[__consumer_offsets,35] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,7] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,38] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,9] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,1] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,16] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16),[__consumer_offsets,2] -> (Leader:2,ISR:2,LeaderEpoch:3,ControllerEpoch:16) (kafka.controller.KafkaController)
[2016-11-15 12:25:35,179] WARN [Controller-1-to-broker-1-send-thread], Controller 1 epoch 16 fails to send request {controller_id=1,controller_epoch=16,delete_partitions=0,partitions=[{topic=__consumer_offsets,partition=33}]} to broker Node(1, 172.16.26.72, 9093). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:180)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:35,480] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:35,782] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:36,087] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:36,388] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:36,690] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:36,992] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:37,298] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:37,601] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:37,906] WARN [Controller-1-to-broker-1-send-thread], Controller 1's connection to broker Node(1, 172.16.26.72, 9093) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(1, 172.16.26.72, 9093) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-11-15 12:25:38,045] DEBUG [Controller 1]: Controller resigning, broker id 1 (kafka.controller.KafkaController)
[2016-11-15 12:25:38,046] DEBUG [Controller 1]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-11-15 12:25:38,048] INFO [Partition state machine on Controller 1]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-11-15 12:25:38,048] INFO [Replica state machine on controller 1]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-11-15 12:25:38,050] INFO [Controller-1-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 12:25:38,050] INFO [Controller-1-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 12:25:38,050] INFO [Controller-1-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 12:25:38,051] INFO [Controller-1-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-11-15 12:25:38,051] INFO [Controller-1-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-11-15 12:25:38,051] INFO [Controller-1-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-11-15 12:25:38,052] INFO [Controller 1]: Broker 1 resigned as the controller (kafka.controller.KafkaController)
